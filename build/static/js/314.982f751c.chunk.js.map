{"version":3,"file":"static/js/314.982f751c.chunk.js","mappings":"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","sources":["pages/leaderboard/Leaderboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport \"./leaderboard.css\"\r\nimport \"./responsive/responsive.css\"\r\nimport \"./responsive/leaderboardTablet.css\"\r\nimport Navbar from '../../components/navbar/Navbar'\r\nimport leaderboard from \"../../image_assets/general/leaderboard.webp\"\r\nimport Icer from \"../../components/powers/Icer\"\r\nimport MassFreeze from \"../../components/powers/MassFreeze.js\"\r\nimport { useSelector } from \"react-redux\"\r\nimport bronze_card_display from \"../../image_assets/general/bronze_card_display.png\"\r\nimport silver_card_display from \"../../image_assets/general/silver_card_display.png\"\r\nimport gold_card_display from \"../../image_assets/general/gold_card_display.png\"\r\nimport money_icon from \"../../image_assets/general/money_icon.webp\"\r\nimport ReceiveGiveGift from '../../components/powers/GiveGift'\r\n\r\n\r\nfunction Leaderboard() {\r\n\r\n  var props = {\r\n    focus: \"leaderboard\",\r\n  }\r\n\r\n  const [rankedPlayers, setRankedPlayers] = useState([\r\n    {name: \"NO PLAYER\", coins: 0, cards: [0,0,0], points: 0},\r\n    {name: \"NO PLAYER\", coins: 0, cards: [0,0,0], points: 0},\r\n    {name: \"NO PLAYER\", coins: 0, cards: [0,0,0], points: 0},\r\n    {name: \"NO PLAYER\", coins: 0, cards: [0,0,0], points: 0},\r\n    {name: \"NO PLAYER\", coins: 0, cards: [0,0,0], points: 0},\r\n    {name: \"NO PLAYER\", coins: 0, cards: [0,0,0], points: 0}\r\n  ])\r\n\r\n  const gameStats = useSelector((state) => state.GameData.value)\r\n  const powersList = useSelector((state) => state.powers.value)\r\n\r\n  let rankPlacement = [\r\n    \"scoreboard_containter_rank01\", \"scoreboard_containter_rank02\", \"scoreboard_containter_rank03\",\r\n    \"scoreboard_containter_rank04\", \"scoreboard_containter_rank05\", \"scoreboard_containter_rank06\"\r\n  ]\r\n\r\n\r\n  const calculateRank = () => {\r\n    let playersPointsAndNames = rankedPlayers\r\n\r\n    // Before any player crafted a card, gameStats is not an Array. But will become when gameStats is sent from server, at first potion crafted.\r\n    if (gameStats.hasOwnProperty('data')) {\r\n       // Award points for each card players have (bronze = 20) (silver = 50) (gold = 150)\r\n      gameStats.data.map((player) => {\r\n        let points = (player.cards[0] * 20) + (player.cards[1] * 50) + (player.cards[2] * 150)\r\n        playersPointsAndNames.push({name: player.playerName, coins: player.coins, cards: player.cards, points: points})\r\n      })\r\n    } else {\r\n      // Award points for each card players have (bronze = 20) (silver = 50) (gold = 150)\r\n      gameStats.map((player) => {\r\n        let points = (player.cards[0] * 20) + (player.cards[1] * 50) + (player.cards[2] * 150)\r\n        playersPointsAndNames.push({name: player.playerName, coins: player.coins, cards: player.cards, points: points})\r\n      })\r\n    } \r\n\r\n   \r\n    // Rank the array of players based of the amount of points\r\n    playersPointsAndNames.sort((a, b) => b.points - a.points);\r\n  //  console.log(\"playersPointsAndNames: \", playersPointsAndNames)\r\n\r\n    // Remove all players except to top 6\r\n    for (let i = 0; i < playersPointsAndNames.length; i++) {\r\n      if (playersPointsAndNames.length > 6) {playersPointsAndNames.pop()}\r\n    }\r\n    // Set ranked array as state\r\n    setRankedPlayers(playersPointsAndNames) \r\n  }\r\n\r\n\r\n  // NEXT - FIX LEADERBOARD \r\n  // 1. gameStats is not an array at start, no players have been .pushed yet\r\n  // 2. server not removing old players from other gameCodes\r\n\r\n\r\n  useEffect(() => {\r\n  //  console.log(\"Leaderboard gameStats: \", gameStats)\r\n    setTimeout(function() {\r\n      calculateRank()\r\n    }, 1000);\r\n  }, [gameStats])\r\n\r\n  \r\n  return (\r\n    <div className='scoreboardView'>\r\n\r\n      {powersList[4].freeze === \"active\" && powersList[3].protection !== \"active\" && <Icer />}\r\n      {powersList[18].mass_freeze === \"active\" && powersList[3].protection !== \"active\" && <MassFreeze />}\r\n      {powersList[7].gift === \"active\" && <ReceiveGiveGift />}\r\n\r\n      <Navbar focus={props}/>\r\n        \r\n        <div className=\"leaderboard_middle\">\r\n          <div id=\"leaderboard_middle_container_id\" className=\"leaderboard_middle_container\">\r\n            <div className=\"scoreboard_image_container\">\r\n              <img id=\"leaderboardImage\" src={leaderboard} alt=\"\" />\r\n\r\n              <p className=\"player_leaderboard_your_rank\">YOUR RANK 10 - 98 456</p>\r\n\r\n\r\n              {\r\n              \r\n              \r\n              rankedPlayers.map((player, i) => {\r\n                return (\r\n                  \r\n                  <div key={i} className=\"scoreboard_rank_container\" id={rankPlacement[i]} >\r\n                      <div className='scoreboard_rank_container_name'>\r\n                        <p>{player.name}</p>\r\n                      </div>\r\n                      \r\n                      <div className='scoreboard_rank_container_cards'>\r\n                        <p className='leaderboard_bronze_cards'>{player.cards[0]}x</p>\r\n                        <img src={bronze_card_display} alt=\"\" />\r\n                        <p className='leaderboard_silver_cards'>{player.cards[1]}x</p>\r\n                        <img src={silver_card_display} alt=\"\" />\r\n                        <p className='leaderboard_gold_cards'>{player.cards[2]}x</p>\r\n                        <img src={gold_card_display} alt=\"\" />\r\n                      </div>\r\n                      \r\n                      <div className='scoreboard_rank_container_coins'>\r\n                        <p>{player.coins}</p>\r\n                        <img src={money_icon} alt=\"\" />\r\n                      </div>\r\n                  </div>\r\n                \r\n                )\r\n        \r\n              })\r\n             \r\n             }\r\n                \r\n\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"leaderboard_footer\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Leaderboard\r\n\r\n\r\n"],"names":["useState","name","coins","cards","points","rankedPlayers","setRankedPlayers","gameStats","useSelector","state","GameData","value","powersList","powers","rankPlacement","useEffect","setTimeout","playersPointsAndNames","hasOwnProperty","data","map","player","push","playerName","sort","a","b","i","length","pop","calculateRank","className","freeze","protection","Icer","mass_freeze","MassFreeze","gift","Navbar","focus","id","src","leaderboard","alt","bronze_card_display","silver_card_display","gold_card_display","money_icon"],"sourceRoot":""}