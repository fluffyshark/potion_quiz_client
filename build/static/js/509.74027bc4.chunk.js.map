{"version":3,"file":"static/js/509.74027bc4.chunk.js","mappings":"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","sources":["pages/craftView/FlipCard.js","pages/craftView/CraftPotion.js","pages/craftView/CraftView.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport \"./flipcard.css\"\r\nimport \"./responsive/responsive.css\"\r\nimport \"./responsive/tablet.css\"\r\nimport potion_fail from \"../../image_assets/general/potion_fail.png\"\r\nimport card_back from \"../../image_assets/general/card_back1.webp\"\r\n\r\nfunction FlipCard(props) {\r\n\r\n  useEffect(() => {\r\n    if (props.reveal === true) {document.getElementById(\"theCard2\").style.transform = \"rotateY(180deg)\"} \r\n    else {document.getElementById(\"theCard2\").style.transform = \"rotateY(0deg)\"}\r\n  \r\n  })\r\n \r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n\r\n        <div className=\"theCard\" id=\"theCard2\">\r\n\r\n            <div className=\"theFront\"><img src={card_back} alt=\"\" /></div>\r\n\r\n            <div className=\"theBack\"><img id=\"flipCardImg\" src={potion_fail} alt=\"\" /></div>\r\n\r\n        </div>\r\n\r\n        \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FlipCard","import React, { useEffect, useState } from 'react'\r\nimport \"./craftPotion.css\"\r\nimport \"./responsive/responsive.css\"\r\nimport \"./responsive/tablet.css\"\r\nimport exitBtn from \"../../image_assets/general/exit_btn.png\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {remove_for_crafting } from \"../../redux/CraftReducer\"\r\nimport {add_potion, add_discovery_points, increase_potion_level } from \"../../redux/PotionReducer\"\r\nimport {golden_ingredient} from \"../../redux/PotionRecipeReducer\"\r\nimport {add_playerPoints} from \"../../redux/PlayerSocketReducer\"\r\nimport FlipCard from './FlipCard'\r\n\r\n\r\nfunction CraftPotion(props) {\r\n\r\n    let socket = props.socket  \r\n\r\n    const [showCard, setShowCard] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const craftList = useSelector((state) => state.crafting.value)\r\n    const recipeList = useSelector((state) => state.recipe.value) \r\n    const potionList = useSelector((state) => state.potions.value) \r\n    const playerStats = useSelector((state) => state.playerStats.value) \r\n    const powersList = useSelector((state) => state.powers.value)\r\n\r\n    const matchRecipe = () => {\r\n        \r\n        let matching = []\r\n        \r\n        // CHANGE recipeList.length to lower or higher depending on playerLevel to only match with the right level \r\n        for (let i = 0; i < recipeList.length; i++) {\r\n        \r\n            if (recipeList[i].ing1_id === craftList[0].selected_id || recipeList[i].ing1_id === craftList[1].selected_id || recipeList[i].ing1_id === craftList[2].selected_id || recipeList[i].ing1_id === craftList[3].selected_id)\r\n            {matching.push(i)}\r\n            \r\n            if (recipeList[i].ing2_id === craftList[0].selected_id || recipeList[i].ing2_id === craftList[1].selected_id || recipeList[i].ing2_id === craftList[2].selected_id || recipeList[i].ing2_id === craftList[3].selected_id)\r\n            {matching.push(i)}\r\n\r\n            if (recipeList[i].ing3_id === craftList[0].selected_id || recipeList[i].ing3_id === craftList[1].selected_id || recipeList[i].ing3_id === craftList[2].selected_id || recipeList[i].ing3_id === craftList[3].selected_id)\r\n            {matching.push(i)}\r\n            \r\n            if (recipeList[i].ing4_id === craftList[0].selected_id || recipeList[i].ing4_id === craftList[1].selected_id || recipeList[i].ing4_id === craftList[2].selected_id || recipeList[i].ing4_id === craftList[3].selected_id)\r\n            {matching.push(i)}\r\n            \r\n        }\r\n\r\n        // Check for level 1\r\n        // Checking if all \"matching\" have the same value, if so then all ingredients exist in the same potion\r\n        if (matching[0] === matching[1] && matching[1] === matching[2] && matching[2] === matching[3])\r\n            {\r\n                if (potionList[matching[0]].earnedPoints === 0) {dispatch(add_discovery_points({id: matching[0], earnedPoints: 20})); dispatch(add_playerPoints(20))}\r\n                    \r\n     \r\n                // A bronze potion will only be made if you are at level 1, otherwise failing to reach silver or gold quality will end in failure\r\n                if (potionList[matching[0]].level === 1) {\r\n                    dispatch(add_potion({id: matching[0]}))\r\n                    // If DOUBLE BATCH is active, then add another potion\r\n                    if (powersList[15].batch === \"active\") {dispatch(add_potion({id: matching[0]}))}\r\n                    document.getElementById(\"flipCardImg\").src = potionList[matching[0]].image_bronze\r\n                }\r\n                \r\n                \r\n               \r\n                // Check for level 2 amd level 3\r\n\r\n                // Arrays with ingredients IDs listed for overview\r\n                let recipeArray = [recipeList[matching[0]].ing1_id,recipeList[matching[0]].ing2_id,recipeList[matching[0]].ing3_id,recipeList[matching[0]].ing4_id]\r\n                let craftArray = [craftList[0].selected_id,craftList[1].selected_id,craftList[2].selected_id,craftList[3].selected_id]\r\n                let resultArray = [0,0,0,0]\r\n                let sortArr = [200,200,200,200]\r\n             \r\n                // Finds the index of each craftArray ingredient ID, to be able to match its placement with the ingredient ID at recipleList. \r\n                sortArr[0] = craftArray.indexOf(recipeList[matching[0]].ing1_id)\r\n                sortArr[1] = craftArray.indexOf(recipeList[matching[0]].ing2_id)\r\n                sortArr[2] = craftArray.indexOf(recipeList[matching[0]].ing3_id)\r\n                sortArr[3] = craftArray.indexOf(recipeList[matching[0]].ing4_id)\r\n\r\n                // To collect the IDs where the amount were correct\r\n                let correctAmountID = [200,200,200,200]\r\n               \r\n                // Check if the player selected the same amount of the ingredient as the recipe declare, if so add \"1\" to resultArray. \r\n                // Also collects the correct amount IDs in the \"correctAmountID\"\r\n                if (recipeList[matching[0]].ing1_amount === craftList[sortArr[0]].amount) {resultArray[0] = 1; correctAmountID[0] = recipeList[matching[0]].ing1_id}\r\n                if (recipeList[matching[0]].ing2_amount === craftList[sortArr[1]].amount) {resultArray[1] = 1; correctAmountID[1] = recipeList[matching[0]].ing2_id}\r\n                if (recipeList[matching[0]].ing3_amount === craftList[sortArr[2]].amount) {resultArray[2] = 1; correctAmountID[2] = recipeList[matching[0]].ing3_id}\r\n                if (recipeList[matching[0]].ing4_amount === craftList[sortArr[3]].amount) {resultArray[3] = 1; correctAmountID[3] = recipeList[matching[0]].ing4_id}\r\n\r\n                // Return the sum of resultArray as \"result\"\r\n                let result = 0; for (let i = 0; i < resultArray.length; i++) {result += resultArray[i];}\r\n\r\n                // See which ingredient that should be a gold frame and display ingredient amount\r\n                if (correctAmountID[0] != 200) {dispatch(golden_ingredient({id: matching[0], ingredientNr: \"ing1\"}))}\r\n                if (correctAmountID[1] != 200) {dispatch(golden_ingredient({id: matching[0], ingredientNr: \"ing2\"}))}\r\n                if (correctAmountID[2] != 200) {dispatch(golden_ingredient({id: matching[0], ingredientNr: \"ing3\"}))}\r\n                if (correctAmountID[3] != 200) {dispatch(golden_ingredient({id: matching[0], ingredientNr: \"ing4\"}))}\r\n\r\n                // If resultArray has a value over 2 then, then player got at least two ingredients amount correct -> it's at least a silver card \r\n                if (result >= 2) {\r\n\r\n                    \r\n\r\n                    // If player has not been rewarded with points for silver card yet, or updated \r\n                    if (potionList[matching[0]].earnedPoints < 50) {\r\n                        dispatch(add_discovery_points({id: matching[0], earnedPoints: 30}))\r\n                        dispatch(add_playerPoints(30))\r\n                        dispatch(increase_potion_level({id: matching[0], potion_Level: \"silver\"}))\r\n                    }\r\n\r\n                    // A silver potion will only be made if you are at level 2 or level 1, otherwise at level 3 failing to reach gold quality will end in failure\r\n                    if (potionList[matching[0]].level === 2) {\r\n                        dispatch(add_potion({id: matching[0]}))\r\n                        // If DOUBLE BATCH is active, then add another potion\r\n                        if (powersList[15].batch === \"active\") {dispatch(add_potion({id: matching[0]}))}\r\n                    }\r\n                    \r\n                    // If resultArray has a value of, then player got all four ingredients amount correct -> it's golden card \r\n                    if (result === 4) {\r\n                        \r\n                        // If player has not been rewarded with points for silver card yet\r\n                        if (potionList[matching[0]].earnedPoints < 100) {dispatch(add_discovery_points({id: matching[0], earnedPoints: 100})); dispatch(add_playerPoints(100))}\r\n\r\n                        document.getElementById(\"flipCardImg\").src = potionList[matching[0]].image_gold\r\n                        dispatch(increase_potion_level({id: matching[0], potion_Level: \"gold\"}))\r\n                    } else {\r\n                        // if not a gold card then at least a silver card\r\n                        document.getElementById(\"flipCardImg\").src = potionList[matching[0]].image_silver\r\n                    }\r\n\r\n                } \r\n                \r\n               \r\n            }\r\n\r\n\r\n            setShowCard(true)\r\n              \r\n\r\n    } // End of matchRecipe()\r\n\r\n    \r\n\r\n    function exitPotionCraft() {\r\n        document.getElementById(\"craftPotion\").style.display = \"none\"\r\n        dispatch(remove_for_crafting())\r\n        setShowCard(false)\r\n    }\r\n   \r\n\r\n\r\n  return (\r\n \r\n    <div className='craftPotion' id=\"craftPotion\">\r\n        <div className=\"craftPotion_contentcontainer\">\r\n            <div className=\"craftPotion_textholder\">\r\n                <p id=\"revealCard_text\">YOU CRAFTED</p>\r\n                <img src={exitBtn} alt=\"\" className=\"craftPotion_textholder_exitBtn\" onClick={() => {exitPotionCraft()}} />\r\n            </div>\r\n            <div className=\"craftPotion_imageholder\" onClick={() => matchRecipe()}>\r\n                <FlipCard reveal={showCard} />\r\n            </div>\r\n            <div className=\"craftPotion_ingredientsholder\">\r\n                <div className=\"craftPotion_ingredientwrapper\">\r\n                    <img src={craftList[0].image} alt=\"\" className=\"craftPotion_ingred\" />\r\n                    <p className='craftPotion_amount_text'>{craftList[0].amount}</p>\r\n                </div>\r\n                <div className=\"craftPotion_ingredientwrapper\">\r\n                    <img src={craftList[1].image} alt=\"\" className=\"craftPotion_ingred\" />\r\n                    <p className='craftPotion_amount_text'>{craftList[1].amount}</p>\r\n                </div>\r\n                <div className=\"craftPotion_ingredientwrapper\">\r\n                    <img src={craftList[2].image} alt=\"\" className=\"craftPotion_ingred\" />\r\n                    <p className='craftPotion_amount_text'>{craftList[2].amount}</p>\r\n                </div>\r\n                <div className=\"craftPotion_ingredientwrapper\">\r\n                    <img src={craftList[3].image} alt=\"\" className=\"craftPotion_ingred\" />\r\n                    <p className='craftPotion_amount_text'>{craftList[3].amount}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default CraftPotion\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\nimport \"./craftView.css\"\r\nimport \"./responsive/responsive.css\"\r\nimport \"./responsive/tablet.css\"\r\nimport CraftPotion from \"./CraftPotion.js\"\r\nimport { motion } from \"framer-motion\";\r\nimport Icer from \"../../components/powers/Icer\"\r\nimport MassFreeze from \"../../components/powers/MassFreeze.js\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport Navbar from \"../../components/navbar/Navbar\"\r\nimport hidden_ingred from \"../../image_assets/general/hidden_ingred.webp\"\r\nimport no_ingred from \"../../image_assets/general/no_ingred.png\"\r\nimport caldrun from \"../../image_assets/general/caldrun.webp\"\r\nimport {select_ingredients, deSelect_ingredients} from \"../../redux/CraftReducer\"\r\nimport { increase_ingredients, decrease_ingredients } from \"../../redux/IngredientReducer.js\"\r\nimport ReceiveGiveGift from '../../components/powers/GiveGift';\r\nimport {playSound} from \"../../components/playSound/playSound\"\r\n\r\nvar craftingSlots = [200,200,200,200]\r\n\r\n\r\n\r\nfunction CraftView(props_socket) {\r\n\r\n  var props = {\r\n    focus: \"craft\",\r\n  }\r\n  let socket = props_socket.socket\r\n\r\n  const dispatch = useDispatch()\r\n  const ingredientsList = useSelector((state) => state.ingredients.value)\r\n  const craftList = useSelector((state) => state.crafting.value) \r\n  const powersList = useSelector((state) => state.powers.value)\r\n\r\n  const dropIngredSound = () => {\r\n    switch (Math.floor(Math.random() * 5)) {\r\n      case 0: playSound(\"ingredDrop01\"); break;\r\n      case 1: playSound(\"ingredDrop02\"); break;\r\n      case 2: playSound(\"ingredDrop03\"); break;\r\n      case 3: playSound(\"ingredDrop04\"); break;\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Show selected ingredient amount when entering CraftView\r\n    window.setTimeout(function(){\r\n      if (craftList[0].amount === 200 || craftList[0].amount === 0) {document.getElementById(\"craftAmount1\").style.display = \"none\"} else {document.getElementById(\"craftAmount1\").style.display = \"inherit\"} \r\n      if (craftList[1].amount === 200 || craftList[1].amount === 0) {document.getElementById(\"craftAmount2\").style.display = \"none\"} else {document.getElementById(\"craftAmount2\").style.display = \"inherit\"} \r\n      if (craftList[2].amount === 200 || craftList[2].amount === 0) {document.getElementById(\"craftAmount3\").style.display = \"none\"} else {document.getElementById(\"craftAmount3\").style.display = \"inherit\"} \r\n      if (craftList[3].amount === 200 || craftList[3].amount === 0) {document.getElementById(\"craftAmount4\").style.display = \"none\"} else {document.getElementById(\"craftAmount4\").style.display = \"inherit\"} \r\n    }, 500);\r\n  }, [craftList])\r\n  \r\n\r\n\r\n  const selectIngredient = (addRemove, nr, selected_id) => {\r\n   \r\n  if (addRemove === \"add\") {\r\n    // If redux or useState for first slot is empty\r\n      if (craftList[0].selected_id === 200 || craftingSlots[0] === selected_id ) {\r\n        // If clicked ingredient is not already in any other slot\r\n        if (craftingSlots[1] !== selected_id && craftingSlots[2] !== selected_id && craftingSlots[3] !== selected_id) {\r\n          // If player owns at least one unit of clicked ingredient\r\n          if (ingredientsList[selected_id].amount > 0) {\r\n            // Send data of clicked ingredient to CraftReducer (redux)\r\n            dispatch(select_ingredients({id:0, selected_id: selected_id, total:ingredientsList[selected_id].amount, image: ingredientsList[selected_id].image_normal}))\r\n            // Unhide slot amount text\r\n            document.getElementById(\"craftAmount1\").style.display = \"flex\"\r\n            // Remove one unit of the clicked ingredient in redux\r\n            dispatch(decrease_ingredients({id:selected_id}))\r\n            // Add clicked ingredient id to useState\r\n            craftingSlots[0] = selected_id \r\n            // Play sound effect\r\n            dropIngredSound()\r\n          } \r\n        }\r\n      }\r\n      else if (craftList[1].selected_id === 200 || craftingSlots[1] === selected_id ) { \r\n        if (craftingSlots[0] !== selected_id && craftingSlots[2] !== selected_id && craftingSlots[3] !== selected_id) {\r\n          if (ingredientsList[selected_id].amount > 0) {\r\n            dispatch(select_ingredients({id:1, selected_id: selected_id, total:ingredientsList[selected_id].amount, image: ingredientsList[selected_id].image_normal}))  \r\n            document.getElementById(\"craftAmount2\").style.display = \"flex\"\r\n            dispatch(decrease_ingredients({id:selected_id}))\r\n            craftingSlots[1] = selected_id \r\n            dropIngredSound()\r\n          }\r\n        }   \r\n      }\r\n      else if (craftList[2].selected_id === 200 || craftingSlots[2] === selected_id) {\r\n        if (craftingSlots[0] !== selected_id && craftingSlots[1] !== selected_id && craftingSlots[3] !== selected_id) {\r\n          if (ingredientsList[selected_id].amount > 0) {\r\n            dispatch(select_ingredients({id:2, selected_id: selected_id, total:ingredientsList[selected_id].amount, image: ingredientsList[selected_id].image_normal})); \r\n            document.getElementById(\"craftAmount3\").style.display = \"flex\"\r\n            dispatch(decrease_ingredients({id:selected_id}))\r\n            craftingSlots[2] = selected_id\r\n            dropIngredSound() \r\n          }\r\n        }\r\n      }\r\n      else if (craftList[3].selected_id === 200 || craftingSlots[3] === selected_id) {\r\n        if (craftingSlots[0] !== selected_id && craftingSlots[1] !== selected_id && craftingSlots[2] !== selected_id) {\r\n          if (ingredientsList[selected_id].amount > 0) {\r\n            dispatch(select_ingredients({id:3, selected_id: selected_id, total:ingredientsList[selected_id].amount, image: ingredientsList[selected_id].image_normal})); \r\n            document.getElementById(\"craftAmount4\").style.display = \"flex\"\r\n            dispatch(decrease_ingredients({id:selected_id}))\r\n            craftingSlots[3] = selected_id \r\n            dropIngredSound()\r\n          }\r\n        }\r\n      }\r\n \r\n      if (!craftingSlots.includes(200)) {\r\n        document.getElementById(\"caldrun\").style.opacity = 1;\r\n        document.getElementById(\"caldrun\").style.pointerEvents = \"inherit\"\r\n    } \r\n\r\n      \r\n      \r\n\r\n    } // End of if-statement\r\n  \r\n    \r\n  \r\n  if (addRemove === \"remove\") {\r\n      if (nr === 0 && craftList[0].selected_id !== 200) {\r\n        dispatch(increase_ingredients({id:craftList[0].selected_id}))\r\n        dispatch(deSelect_ingredients({id:0, selected_id: 200, image: no_ingred}))\r\n      }\r\n      if (craftList[0].amount < 1) {\r\n        craftingSlots[0] = 200; document.getElementById(\"craftAmount1\").style.display = \"none\"\r\n        document.getElementById(\"caldrun\").style.opacity = 0.5\r\n      }\r\n      if (nr === 1 && craftList[1].selected_id !== 200) {\r\n        dispatch(increase_ingredients({id:craftList[1].selected_id}))\r\n        dispatch(deSelect_ingredients({id:1, selected_id: 200, image: no_ingred}))\r\n      }\r\n      if (craftList[1].amount < 1) {\r\n        craftingSlots[1] = 200; document.getElementById(\"craftAmount2\").style.display = \"none\"\r\n        document.getElementById(\"caldrun\").style.opacity = 0.5\r\n      }\r\n      if (nr === 2 && craftList[2].selected_id !== 200) {\r\n        dispatch(increase_ingredients({id:craftList[2].selected_id}))\r\n        dispatch(deSelect_ingredients({id:2, selected_id: 200, image: no_ingred}))   \r\n      }\r\n      if (craftList[2].amount < 1) {\r\n        craftingSlots[2] = 200; document.getElementById(\"craftAmount3\").style.display = \"none\"\r\n        document.getElementById(\"caldrun\").style.opacity = 0.5\r\n      }\r\n      if (nr === 3 && craftList[3].selected_id !== 200) {\r\n        dispatch(increase_ingredients({id:craftList[3].selected_id}))\r\n        dispatch(deSelect_ingredients({id:3, selected_id: 200, image: no_ingred}))  \r\n      }\r\n      if (craftList[3].amount === 0) {\r\n        craftingSlots[3] = 200; document.getElementById(\"craftAmount4\").style.display = \"none\"\r\n        document.getElementById(\"caldrun\").style.opacity = 0.5\r\n      }\r\n      \r\n    } \r\n    \r\n  } // End of selectIngredient\r\n\r\n\r\n  useEffect(() => {\r\n    if (!craftingSlots.includes(200)) {\r\n      document.getElementById(\"caldrun\").style.opacity = 1;\r\n      document.getElementById(\"caldrun\").style.pointerEvents = \"inherit\"\r\n  } else {\r\n    document.getElementById(\"caldrun\").style.opacity = 0.5;\r\n    document.getElementById(\"caldrun\").style.pointerEvents = \"none\"\r\n  }\r\n  })\r\n\r\n\r\n\r\n  const craftPotion = () => {\r\n    \r\n    document.getElementById(\"craftAmount1\").style.display = \"none\"\r\n    document.getElementById(\"craftAmount2\").style.display = \"none\"\r\n    document.getElementById(\"craftAmount3\").style.display = \"none\"\r\n    document.getElementById(\"craftAmount4\").style.display = \"none\"\r\n\r\n    craftingSlots[0] = 200\r\n    craftingSlots[1] = 200\r\n    craftingSlots[2] = 200\r\n    craftingSlots[3] = 200\r\n   \r\n    document.getElementById(\"craftPotion\").style.display = \"flex\"\r\n\r\n    playSound(\"craftPotion\")\r\n\r\n  } // End of craftPotion\r\n\r\n \r\n\r\n  return (\r\n    <div className='craftView'>\r\n\r\n      {powersList[4].freeze === \"active\" && powersList[3].protection !== \"active\" && <Icer />}\r\n      {powersList[18].mass_freeze === \"active\" && powersList[3].protection !== \"active\" && <MassFreeze />}\r\n      {powersList[7].gift === \"active\" && <ReceiveGiveGift />}\r\n\r\n      <Navbar focus={props}/>\r\n      <CraftPotion socket={socket}/>\r\n\r\n      <div className=\"craftView_middle\">\r\n        \r\n          <div className=\"craftView_middle_container\">\r\n            <div className=\"craftView_middle_ingred_container\">\r\n            <div className=\"craftView_extra_space_top\"></div>\r\n\r\n            \r\n                {ingredientsList.map((ingredient, i) => {\r\n                   if (ingredient.amount > 0) {\r\n                     return (\r\n                      <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.9 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} onClick={() => selectIngredient(\"add\", 200, ingredient.id)} className=\"craftView_ingredBox\">\r\n                        <img src={ingredient.image_normal} alt=\"\" className=\"craftView_ingred\" /> \r\n                        <p className=\"craftView_ingred_amount\">{ingredient.amount}</p>\r\n                      </motion.div>\r\n                     )\r\n                   } else if (ingredient.discovered === false) {\r\n                     return (\r\n                      <div key={i} className=\"craftView_ingredBox\">\r\n                      <img src={hidden_ingred} alt=\"\" className=\"craftView_ingred\" /> \r\n                      </div>\r\n                     )\r\n                   } else {\r\n                    return (\r\n                      <div key={i} className=\"craftView_ingredBox\">\r\n                      <img src={ingredient.image_normal} alt=\"\" className=\"craftView_ingred\" style={{opacity:0.5}} /> \r\n                      </div>\r\n                     )\r\n                   }\r\n                  })\r\n                }\r\n          \r\n            \r\n              \r\n              <div className=\"craftView_extra_space_bottom\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"craftView_footer\">\r\n          <div className=\"craftView_footer_container\">\r\n            <div className=\"craftView_footer_craftholder\">\r\n              <img onClick={() => selectIngredient(\"remove\", 0, 200)}  id=\"craftImg1\" src={craftList[0].image} alt=\"\" className=\"recipe_ingredient\" />\r\n              <p id=\"craftAmount1\" className=\"selected_ingredients_amount\">{craftList[0].amount}</p>\r\n            </div>\r\n            <div className=\"craftView_footer_craftholder\">\r\n              <img onClick={() => selectIngredient(\"remove\", 1, 200)} id=\"craftImg2\" src={craftList[1].image} alt=\"\" className=\"recipe_ingredient\" />\r\n              <p id=\"craftAmount2\" className=\"selected_ingredients_amount\">{craftList[1].amount}</p>\r\n            </div>\r\n\r\n            <img onClick={() => craftPotion()} id=\"caldrun\" src={caldrun} alt=\"\" className=\"footer_cauldrun\" />\r\n\r\n            <div className=\"craftView_footer_craftholder\">\r\n              <img onClick={() => selectIngredient(\"remove\", 2, 200)} id=\"craftImg3\" src={craftList[2].image} alt=\"\" className=\"recipe_ingredient\" />\r\n              <p id=\"craftAmount3\" className=\"selected_ingredients_amount\">{craftList[2].amount}</p>\r\n            </div>\r\n            <div className=\"craftView_footer_craftholder\">\r\n              <img onClick={() => selectIngredient(\"remove\", 3, 200)} id=\"craftImg4\" src={craftList[3].image} alt=\"\" className=\"recipe_ingredient\" />\r\n              <p id=\"craftAmount4\" className=\"selected_ingredients_amount\">{craftList[3].amount}</p>\r\n            </div>\r\n              \r\n          </div>\r\n        </div>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CraftView"],"names":["props","useEffect","reveal","document","getElementById","style","transform","className","id","src","card_back","alt","potion_fail","socket","useState","showCard","setShowCard","dispatch","useDispatch","craftList","useSelector","state","crafting","value","recipeList","recipe","potionList","potions","powersList","playerStats","powers","exitBtn","onClick","display","remove_for_crafting","matching","i","length","ing1_id","selected_id","push","ing2_id","ing3_id","ing4_id","earnedPoints","add_discovery_points","add_playerPoints","level","add_potion","batch","image_bronze","craftArray","resultArray","sortArr","indexOf","correctAmountID","ing1_amount","amount","ing2_amount","ing3_amount","ing4_amount","result","golden_ingredient","ingredientNr","increase_potion_level","potion_Level","image_gold","image_silver","matchRecipe","image","craftingSlots","props_socket","ingredientsList","ingredients","dropIngredSound","Math","floor","random","playSound","window","setTimeout","selectIngredient","addRemove","nr","select_ingredients","total","image_normal","decrease_ingredients","includes","opacity","pointerEvents","increase_ingredients","deSelect_ingredients","no_ingred","freeze","protection","Icer","mass_freeze","MassFreeze","gift","Navbar","focus","map","ingredient","motion","whileHover","scale","whileTap","transition","type","stiffness","damping","discovered","hidden_ingred","caldrun"],"sourceRoot":""}