{"version":3,"file":"static/js/509.0af2c37c.chunk.js","mappings":"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","sources":["components/powers/GiveGift.js","components/powers/Icer.js","components/powers/MassFreeze.js","pages/craftView/FlipCard.js","pages/craftView/CraftPotion.js","pages/craftView/CraftView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport exitBtn from \"../../image_assets/general/exit_btn.png\"\r\nimport \"./powers.css\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { dectivate_power } from \"../../redux/PowerReducer\"\r\nimport { giveGift_ingredients } from \"../../redux/IngredientReducer\"\r\n\r\n\r\nfunction ReceiveGiveGift() {\r\n\r\n  const [giftArray, setGiftArray] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n  const powersList = useSelector((state) => state.powers.value)\r\n  const ingredientsList = useSelector((state) => state.ingredients.value)\r\n\r\n\r\n  function startGift() {\r\n    let amount = 0\r\n    let colletArray = []\r\n\r\n    if (powersList[7].attackLevel7 === 1) {amount = powersList[7].gift_amount_1}\r\n    if (powersList[7].attackLevel7 === 2) {amount = powersList[7].gift_amount_2}\r\n    if (powersList[7].attackLevel7 === 3) {amount = powersList[7].gift_amount_3}\r\n\r\n    /// Creating, filling, shuffling an array with the id of all ingredients  \r\n    var ingred = [...Array(180).keys()].sort(() => Math.random() - 0.5);\r\n    \r\n    /// Assigning as many ingredient's id, as the gifted amount level allows \r\n    for (let i = 0; i < amount; i++) {colletArray.push(ingred[i])}\r\n\r\n    /// Assign ingredients' id to giftArray, that will be mapped out\r\n    setGiftArray(colletArray)\r\n\r\n    /// Add the ingredients to user's collection via ingredientReducer\r\n    dispatch(giveGift_ingredients({colletArray}))\r\n\r\n    /// Show Give Gift popup layout\r\n    document.getElementById(\"give_gift\").style.display = \"flex\"\r\n\r\n  } // End of startGift()\r\n\r\n  \r\n  useEffect(() => {if (powersList[7].gift === \"active\") {startGift()}}, [powersList[7].gift])\r\n\r\n  function exitGiftView() {\r\n    document.getElementById(\"give_gift\").style.display = \"none\"\r\n    dispatch(dectivate_power({power_name: \"GIVE GIFT\"}))\r\n  }\r\n\r\n  return (\r\n    <div className=\"give_gift_container\" id=\"give_gift\">\r\n      <div className=\"give_gift_scroll\">\r\n        <div className=\"give_gift_scroll_top\"><img onClick={() => {exitGiftView()}} src={exitBtn} alt=\"\" /></div>\r\n        <div className=\"give_gift_scroll_text\">\r\n            <p className=\"give_gift_scroll_text_title\">YOU GOT A GIFT</p>\r\n            <p className=\"give_gift_scroll_text_sender\">Sent by a true friend</p>\r\n        </div>\r\n        <div className=\"give_gift_scroll_wrap\">\r\n          {\r\n            giftArray.map((herb, i) => {\r\n              return <img key={i} className='give_gift_scroll_wrap_herbs' src={ingredientsList[giftArray[i]].image_normal} alt=\"\" />\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReceiveGiveGift\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import \"./powers.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { dectivate_power } from \"../../redux/PowerReducer.js\"\r\nimport icer from \"../../image_assets/powers/icer.webp\"\r\nimport { motion } from \"framer-motion\";\r\nimport { playSound } from \"../playSound/playSound\";\r\n\r\n\r\nexport default function App() {\r\n\r\n  const dispatch = useDispatch()\r\n  const powersList = useSelector((state) => state.powers.value)\r\n\r\n  // Dictate the duration of freeze power depending on potion level.\r\n  // This should be rewritten and sent to other players via Socket IO\r\n  const icer_duration_level = () => {\r\n    let duration = 0\r\n\r\n    if (powersList[4].attackLevel4 === 1) {duration = powersList[4].duration_level_1}\r\n    if (powersList[4].attackLevel4 === 2) {duration = powersList[4].duration_level_2}\r\n    if (powersList[4].attackLevel4 === 3) {duration = powersList[4].duration_level_3}\r\n\r\n    playSound(\"freeze\")\r\n\r\n    return duration\r\n  }\r\n\r\n\r\n  setTimeout(function() {\r\n    dispatch(dectivate_power({power_name: \"FREEZE\"}))\r\n    document.getElementById(\"icer\").style.display = \"none\"\r\n  }, icer_duration_level()*1000);\r\n\r\n\r\n  return (\r\n    <motion.img\r\n      src={icer}\r\n      className=\"power_icer\"\r\n      id=\"icer\"\r\n      animate={{\r\n        opacity: [0, 0.8, 0.8, 0],\r\n      }}\r\n      transition={{\r\n        duration: icer_duration_level(),\r\n        ease: \"easeInOut\",\r\n        times: [0, 0.2, 0.9, 1],\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import \"./powers.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { dectivate_power } from \"../../redux/PowerReducer.js\"\r\nimport icer from \"../../image_assets/powers/icer.webp\"\r\nimport { motion } from \"framer-motion\";\r\nimport { playSound } from \"../playSound/playSound\";\r\n\r\n\r\nexport default function MassFreeze() {\r\n\r\n  const dispatch = useDispatch()\r\n  const powersList = useSelector((state) => state.powers.value)\r\n\r\n  // Dictate the duration of freeze power depending on potion level.\r\n  // This should be rewritten and sent to other players via Socket IO\r\n  const icer_duration_level = () => {\r\n    let duration = 0\r\n\r\n    if (powersList[18].attackLevel18 === 1) {duration = powersList[18].duration_level_1}\r\n    if (powersList[18].attackLevel18 === 2) {duration = powersList[18].duration_level_2}\r\n    if (powersList[18].attackLevel18 === 3) {duration = powersList[18].duration_level_3}\r\n\r\n    playSound(\"freeze\")\r\n\r\n    return duration\r\n  }\r\n\r\n\r\n  setTimeout(function() {\r\n    dispatch(dectivate_power({power_name: \"MASS FREEZE\"}))\r\n    document.getElementById(\"freeze\").style.display = \"none\"\r\n  }, icer_duration_level()*1000);\r\n\r\n\r\n  return (\r\n    <motion.img\r\n      src={icer}\r\n      className=\"power_mass_freeze\"\r\n      id=\"freeze\"\r\n      animate={{\r\n        opacity: [0, 0.8, 0.8, 0],\r\n      }}\r\n      transition={{\r\n        duration: icer_duration_level(),\r\n        ease: \"easeInOut\",\r\n        times: [0, 0.2, 0.9, 1],\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport \"./flipcard.css\"\r\nimport \"./responsive/responsive.css\"\r\nimport \"./responsive/tablet.css\"\r\nimport potion_fail from \"../../image_assets/general/potion_fail.png\"\r\nimport card_back from \"../../image_assets/general/card_back1.webp\"\r\n\r\nfunction FlipCard(props) {\r\n\r\n  useEffect(() => {\r\n    if (props.reveal === true) {document.getElementById(\"theCard2\").style.transform = \"rotateY(180deg)\"} \r\n    else {document.getElementById(\"theCard2\").style.transform = \"rotateY(0deg)\"}\r\n  \r\n  })\r\n \r\n\r\n  return (\r\n    <div className='mainContainer'>\r\n\r\n        <div className=\"theCard\" id=\"theCard2\">\r\n\r\n            <div className=\"theFront\"><img src={card_back} alt=\"\" /></div>\r\n\r\n            <div className=\"theBack\"><img id=\"flipCardImg\" src={potion_fail} alt=\"\" /></div>\r\n\r\n        </div>\r\n\r\n        \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FlipCard","import React, { useEffect, useState } from 'react'\r\nimport \"./craftPotion.css\"\r\nimport \"./responsive/responsive.css\"\r\nimport \"./responsive/tablet.css\"\r\nimport exitBtn from \"../../image_assets/general/exit_btn.png\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {remove_for_crafting } from \"../../redux/CraftReducer\"\r\nimport {add_potion, add_discovery_points, increase_potion_level } from \"../../redux/PotionReducer\"\r\nimport {golden_ingredient} from \"../../redux/PotionRecipeReducer\"\r\nimport {add_playerPoints} from \"../../redux/PlayerSocketReducer\"\r\nimport FlipCard from './FlipCard'\r\n\r\n\r\nfunction CraftPotion(props) {\r\n\r\n    let socket = props.socket  \r\n\r\n    const [showCard, setShowCard] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const craftList = useSelector((state) => state.crafting.value)\r\n    const recipeList = useSelector((state) => state.recipe.value) \r\n    const potionList = useSelector((state) => state.potions.value) \r\n    const playerStats = useSelector((state) => state.playerStats.value) \r\n    const powersList = useSelector((state) => state.powers.value)\r\n\r\n    const matchRecipe = () => {\r\n        \r\n        let matching = []\r\n        \r\n        // CHANGE recipeList.length to lower or higher depending on playerLevel to only match with the right level \r\n        for (let i = 0; i < recipeList.length; i++) {\r\n        \r\n            if (recipeList[i].ing1_id === craftList[0].selected_id || recipeList[i].ing1_id === craftList[1].selected_id || recipeList[i].ing1_id === craftList[2].selected_id || recipeList[i].ing1_id === craftList[3].selected_id)\r\n            {matching.push(i)}\r\n            \r\n            if (recipeList[i].ing2_id === craftList[0].selected_id || recipeList[i].ing2_id === craftList[1].selected_id || recipeList[i].ing2_id === craftList[2].selected_id || recipeList[i].ing2_id === craftList[3].selected_id)\r\n            {matching.push(i)}\r\n\r\n            if (recipeList[i].ing3_id === craftList[0].selected_id || recipeList[i].ing3_id === craftList[1].selected_id || recipeList[i].ing3_id === craftList[2].selected_id || recipeList[i].ing3_id === craftList[3].selected_id)\r\n            {matching.push(i)}\r\n            \r\n            if (recipeList[i].ing4_id === craftList[0].selected_id || recipeList[i].ing4_id === craftList[1].selected_id || recipeList[i].ing4_id === craftList[2].selected_id || recipeList[i].ing4_id === craftList[3].selected_id)\r\n            {matching.push(i)}\r\n            \r\n        }\r\n\r\n        // Check for level 1\r\n        // Checking if all \"matching\" have the same value, if so then all ingredients exist in the same potion\r\n        if (matching[0] === matching[1] && matching[1] === matching[2] && matching[2] === matching[3])\r\n            {\r\n                if (potionList[matching[0]].earnedPoints === 0) {dispatch(add_discovery_points({id: matching[0], earnedPoints: 20})); dispatch(add_playerPoints(20))}\r\n                    \r\n     \r\n                // A bronze potion will only be made if you are at level 1, otherwise failing to reach silver or gold quality will end in failure\r\n                if (potionList[matching[0]].level === 1) {\r\n                    dispatch(add_potion({id: matching[0]}))\r\n                    // If DOUBLE BATCH is active, then add another potion\r\n                    if (powersList[15].batch === \"active\") {dispatch(add_potion({id: matching[0]}))}\r\n                    document.getElementById(\"flipCardImg\").src = potionList[matching[0]].image_bronze\r\n                }\r\n                \r\n                \r\n               \r\n                // Check for level 2 amd level 3\r\n\r\n                // Arrays with ingredients IDs listed for overview\r\n                let recipeArray = [recipeList[matching[0]].ing1_id,recipeList[matching[0]].ing2_id,recipeList[matching[0]].ing3_id,recipeList[matching[0]].ing4_id]\r\n                let craftArray = [craftList[0].selected_id,craftList[1].selected_id,craftList[2].selected_id,craftList[3].selected_id]\r\n                let resultArray = [0,0,0,0]\r\n                let sortArr = [200,200,200,200]\r\n             \r\n                // Finds the index of each craftArray ingredient ID, to be able to match its placement with the ingredient ID at recipleList. \r\n                sortArr[0] = craftArray.indexOf(recipeList[matching[0]].ing1_id)\r\n                sortArr[1] = craftArray.indexOf(recipeList[matching[0]].ing2_id)\r\n                sortArr[2] = craftArray.indexOf(recipeList[matching[0]].ing3_id)\r\n                sortArr[3] = craftArray.indexOf(recipeList[matching[0]].ing4_id)\r\n\r\n                // To collect the IDs where the amount were correct\r\n                let correctAmountID = [200,200,200,200]\r\n               \r\n                // Check if the player selected the same amount of the ingredient as the recipe declare, if so add \"1\" to resultArray. \r\n                // Also collects the correct amount IDs in the \"correctAmountID\"\r\n                if (recipeList[matching[0]].ing1_amount === craftList[sortArr[0]].amount) {resultArray[0] = 1; correctAmountID[0] = recipeList[matching[0]].ing1_id}\r\n                if (recipeList[matching[0]].ing2_amount === craftList[sortArr[1]].amount) {resultArray[1] = 1; correctAmountID[1] = recipeList[matching[0]].ing2_id}\r\n                if (recipeList[matching[0]].ing3_amount === craftList[sortArr[2]].amount) {resultArray[2] = 1; correctAmountID[2] = recipeList[matching[0]].ing3_id}\r\n                if (recipeList[matching[0]].ing4_amount === craftList[sortArr[3]].amount) {resultArray[3] = 1; correctAmountID[3] = recipeList[matching[0]].ing4_id}\r\n\r\n                // Return the sum of resultArray as \"result\"\r\n                let result = 0; for (let i = 0; i < resultArray.length; i++) {result += resultArray[i];}\r\n\r\n                // See which ingredient that should be a gold frame and display ingredient amount\r\n                if (correctAmountID[0] != 200) {dispatch(golden_ingredient({id: matching[0], ingredientNr: \"ing1\"}))}\r\n                if (correctAmountID[1] != 200) {dispatch(golden_ingredient({id: matching[0], ingredientNr: \"ing2\"}))}\r\n                if (correctAmountID[2] != 200) {dispatch(golden_ingredient({id: matching[0], ingredientNr: \"ing3\"}))}\r\n                if (correctAmountID[3] != 200) {dispatch(golden_ingredient({id: matching[0], ingredientNr: \"ing4\"}))}\r\n\r\n                // If resultArray has a value over 2 then, then player got at least two ingredients amount correct -> it's at least a silver card \r\n                if (result >= 2) {\r\n\r\n                    \r\n\r\n                    // If player has not been rewarded with points for silver card yet, or updated \r\n                    if (potionList[matching[0]].earnedPoints < 50) {\r\n                        dispatch(add_discovery_points({id: matching[0], earnedPoints: 30}))\r\n                        dispatch(add_playerPoints(30))\r\n                        dispatch(increase_potion_level({id: matching[0], potion_Level: \"silver\"}))\r\n                    }\r\n\r\n                    // A silver potion will only be made if you are at level 2 or level 1, otherwise at level 3 failing to reach gold quality will end in failure\r\n                    if (potionList[matching[0]].level === 2) {\r\n                        dispatch(add_potion({id: matching[0]}))\r\n                        // If DOUBLE BATCH is active, then add another potion\r\n                        if (powersList[15].batch === \"active\") {dispatch(add_potion({id: matching[0]}))}\r\n                    }\r\n                    \r\n                    // If resultArray has a value of, then player got all four ingredients amount correct -> it's golden card \r\n                    if (result === 4) {\r\n                        \r\n                        // If player has not been rewarded with points for silver card yet\r\n                        if (potionList[matching[0]].earnedPoints < 100) {dispatch(add_discovery_points({id: matching[0], earnedPoints: 100})); dispatch(add_playerPoints(100))}\r\n\r\n                        document.getElementById(\"flipCardImg\").src = potionList[matching[0]].image_gold\r\n                        dispatch(increase_potion_level({id: matching[0], potion_Level: \"gold\"}))\r\n                    } else {\r\n                        // if not a gold card then at least a silver card\r\n                        document.getElementById(\"flipCardImg\").src = potionList[matching[0]].image_silver\r\n                    }\r\n\r\n                } \r\n                \r\n               \r\n            }\r\n\r\n\r\n            setShowCard(true)\r\n              \r\n\r\n    } // End of matchRecipe()\r\n\r\n    \r\n\r\n    function exitPotionCraft() {\r\n        document.getElementById(\"craftPotion\").style.display = \"none\"\r\n        dispatch(remove_for_crafting())\r\n        setShowCard(false)\r\n    }\r\n   \r\n\r\n\r\n  return (\r\n \r\n    <div className='craftPotion' id=\"craftPotion\">\r\n        <div className=\"craftPotion_contentcontainer\">\r\n            <div className=\"craftPotion_textholder\">\r\n                <p id=\"revealCard_text\">YOU CRAFTED</p>\r\n                <img src={exitBtn} alt=\"\" className=\"craftPotion_textholder_exitBtn\" onClick={() => {exitPotionCraft()}} />\r\n            </div>\r\n            <div className=\"craftPotion_imageholder\" onClick={() => matchRecipe()}>\r\n                <FlipCard reveal={showCard} />\r\n            </div>\r\n            <div className=\"craftPotion_ingredientsholder\">\r\n                <div className=\"craftPotion_ingredientwrapper\">\r\n                    <img src={craftList[0].image} alt=\"\" className=\"craftPotion_ingred\" />\r\n                    <p className='craftPotion_amount_text'>{craftList[0].amount}</p>\r\n                </div>\r\n                <div className=\"craftPotion_ingredientwrapper\">\r\n                    <img src={craftList[1].image} alt=\"\" className=\"craftPotion_ingred\" />\r\n                    <p className='craftPotion_amount_text'>{craftList[1].amount}</p>\r\n                </div>\r\n                <div className=\"craftPotion_ingredientwrapper\">\r\n                    <img src={craftList[2].image} alt=\"\" className=\"craftPotion_ingred\" />\r\n                    <p className='craftPotion_amount_text'>{craftList[2].amount}</p>\r\n                </div>\r\n                <div className=\"craftPotion_ingredientwrapper\">\r\n                    <img src={craftList[3].image} alt=\"\" className=\"craftPotion_ingred\" />\r\n                    <p className='craftPotion_amount_text'>{craftList[3].amount}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default CraftPotion\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\nimport \"./craftView.css\"\r\nimport \"./responsive/responsive.css\"\r\nimport \"./responsive/tablet.css\"\r\nimport CraftPotion from \"./CraftPotion.js\"\r\nimport { motion } from \"framer-motion\";\r\nimport Icer from \"../../components/powers/Icer\"\r\nimport MassFreeze from \"../../components/powers/MassFreeze.js\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport Navbar from \"../../components/navbar/Navbar\"\r\nimport hidden_ingred from \"../../image_assets/general/hidden_ingred.webp\"\r\nimport no_ingred from \"../../image_assets/general/no_ingred.png\"\r\nimport caldrun from \"../../image_assets/general/caldrun.webp\"\r\nimport {select_ingredients, deSelect_ingredients} from \"../../redux/CraftReducer\"\r\nimport { increase_ingredients, decrease_ingredients } from \"../../redux/IngredientReducer.js\"\r\nimport ReceiveGiveGift from '../../components/powers/GiveGift';\r\n//import {playSound} from \"../../components/playSound/playSound\"\r\n\r\nvar craftingSlots = [200,200,200,200]\r\n\r\n\r\n\r\nfunction CraftView(props_socket) {\r\n\r\n  var props = {\r\n    focus: \"craft\",\r\n  }\r\n  let socket = props_socket.socket\r\n\r\n  const dispatch = useDispatch()\r\n  const ingredientsList = useSelector((state) => state.ingredients.value)\r\n  const craftList = useSelector((state) => state.crafting.value) \r\n  const powersList = useSelector((state) => state.powers.value)\r\n\r\n  /*\r\n  const dropIngredSound = () => {\r\n    switch (Math.floor(Math.random() * 5)) {\r\n      case 0: playSound(\"ingredDrop01\"); break;\r\n      case 1: playSound(\"ingredDrop02\"); break;\r\n      case 2: playSound(\"ingredDrop03\"); break;\r\n      case 3: playSound(\"ingredDrop04\"); break;\r\n      default: break;\r\n    }\r\n  }\r\n  */\r\n\r\n\r\n  useEffect(() => {\r\n    // Show selected ingredient amount when entering CraftView\r\n    window.setTimeout(function(){\r\n      if (craftList[0].amount === 200 || craftList[0].amount === 0) {document.getElementById(\"craftAmount1\").style.display = \"none\"} else {document.getElementById(\"craftAmount1\").style.display = \"inherit\"} \r\n      if (craftList[1].amount === 200 || craftList[1].amount === 0) {document.getElementById(\"craftAmount2\").style.display = \"none\"} else {document.getElementById(\"craftAmount2\").style.display = \"inherit\"} \r\n      if (craftList[2].amount === 200 || craftList[2].amount === 0) {document.getElementById(\"craftAmount3\").style.display = \"none\"} else {document.getElementById(\"craftAmount3\").style.display = \"inherit\"} \r\n      if (craftList[3].amount === 200 || craftList[3].amount === 0) {document.getElementById(\"craftAmount4\").style.display = \"none\"} else {document.getElementById(\"craftAmount4\").style.display = \"inherit\"} \r\n    }, 500);\r\n  }, [craftList])\r\n  \r\n\r\n\r\n  const selectIngredient = (addRemove, nr, selected_id) => {\r\n   \r\n  if (addRemove === \"add\") {\r\n    // If redux or useState for first slot is empty\r\n      if (craftList[0].selected_id === 200 || craftingSlots[0] === selected_id ) {\r\n        // If clicked ingredient is not already in any other slot\r\n        if (craftingSlots[1] !== selected_id && craftingSlots[2] !== selected_id && craftingSlots[3] !== selected_id) {\r\n          // If player owns at least one unit of clicked ingredient\r\n          if (ingredientsList[selected_id].amount > 0) {\r\n            // Send data of clicked ingredient to CraftReducer (redux)\r\n            dispatch(select_ingredients({id:0, selected_id: selected_id, total:ingredientsList[selected_id].amount, image: ingredientsList[selected_id].image_normal}))\r\n            // Unhide slot amount text\r\n            document.getElementById(\"craftAmount1\").style.display = \"flex\"\r\n            // Remove one unit of the clicked ingredient in redux\r\n            dispatch(decrease_ingredients({id:selected_id}))\r\n            // Add clicked ingredient id to useState\r\n            craftingSlots[0] = selected_id \r\n            // Play sound effect\r\n          //  dropIngredSound()\r\n          } \r\n        }\r\n      }\r\n      else if (craftList[1].selected_id === 200 || craftingSlots[1] === selected_id ) { \r\n        if (craftingSlots[0] !== selected_id && craftingSlots[2] !== selected_id && craftingSlots[3] !== selected_id) {\r\n          if (ingredientsList[selected_id].amount > 0) {\r\n            dispatch(select_ingredients({id:1, selected_id: selected_id, total:ingredientsList[selected_id].amount, image: ingredientsList[selected_id].image_normal}))  \r\n            document.getElementById(\"craftAmount2\").style.display = \"flex\"\r\n            dispatch(decrease_ingredients({id:selected_id}))\r\n            craftingSlots[1] = selected_id \r\n          //  dropIngredSound()\r\n          }\r\n        }   \r\n      }\r\n      else if (craftList[2].selected_id === 200 || craftingSlots[2] === selected_id) {\r\n        if (craftingSlots[0] !== selected_id && craftingSlots[1] !== selected_id && craftingSlots[3] !== selected_id) {\r\n          if (ingredientsList[selected_id].amount > 0) {\r\n            dispatch(select_ingredients({id:2, selected_id: selected_id, total:ingredientsList[selected_id].amount, image: ingredientsList[selected_id].image_normal})); \r\n            document.getElementById(\"craftAmount3\").style.display = \"flex\"\r\n            dispatch(decrease_ingredients({id:selected_id}))\r\n            craftingSlots[2] = selected_id\r\n          //  dropIngredSound() \r\n          }\r\n        }\r\n      }\r\n      else if (craftList[3].selected_id === 200 || craftingSlots[3] === selected_id) {\r\n        if (craftingSlots[0] !== selected_id && craftingSlots[1] !== selected_id && craftingSlots[2] !== selected_id) {\r\n          if (ingredientsList[selected_id].amount > 0) {\r\n            dispatch(select_ingredients({id:3, selected_id: selected_id, total:ingredientsList[selected_id].amount, image: ingredientsList[selected_id].image_normal})); \r\n            document.getElementById(\"craftAmount4\").style.display = \"flex\"\r\n            dispatch(decrease_ingredients({id:selected_id}))\r\n            craftingSlots[3] = selected_id \r\n          //  dropIngredSound()\r\n          }\r\n        }\r\n      }\r\n \r\n      if (!craftingSlots.includes(200)) {\r\n        document.getElementById(\"caldrun\").style.opacity = 1;\r\n        document.getElementById(\"caldrun\").style.pointerEvents = \"inherit\"\r\n    } \r\n\r\n      \r\n      \r\n\r\n    } // End of if-statement\r\n  \r\n    \r\n  \r\n  if (addRemove === \"remove\") {\r\n      if (nr === 0 && craftList[0].selected_id !== 200) {\r\n        dispatch(increase_ingredients({id:craftList[0].selected_id}))\r\n        dispatch(deSelect_ingredients({id:0, selected_id: 200, image: no_ingred}))\r\n      }\r\n      if (craftList[0].amount < 1) {\r\n        craftingSlots[0] = 200; document.getElementById(\"craftAmount1\").style.display = \"none\"\r\n        document.getElementById(\"caldrun\").style.opacity = 0.5\r\n      }\r\n      if (nr === 1 && craftList[1].selected_id !== 200) {\r\n        dispatch(increase_ingredients({id:craftList[1].selected_id}))\r\n        dispatch(deSelect_ingredients({id:1, selected_id: 200, image: no_ingred}))\r\n      }\r\n      if (craftList[1].amount < 1) {\r\n        craftingSlots[1] = 200; document.getElementById(\"craftAmount2\").style.display = \"none\"\r\n        document.getElementById(\"caldrun\").style.opacity = 0.5\r\n      }\r\n      if (nr === 2 && craftList[2].selected_id !== 200) {\r\n        dispatch(increase_ingredients({id:craftList[2].selected_id}))\r\n        dispatch(deSelect_ingredients({id:2, selected_id: 200, image: no_ingred}))   \r\n      }\r\n      if (craftList[2].amount < 1) {\r\n        craftingSlots[2] = 200; document.getElementById(\"craftAmount3\").style.display = \"none\"\r\n        document.getElementById(\"caldrun\").style.opacity = 0.5\r\n      }\r\n      if (nr === 3 && craftList[3].selected_id !== 200) {\r\n        dispatch(increase_ingredients({id:craftList[3].selected_id}))\r\n        dispatch(deSelect_ingredients({id:3, selected_id: 200, image: no_ingred}))  \r\n      }\r\n      if (craftList[3].amount === 0) {\r\n        craftingSlots[3] = 200; document.getElementById(\"craftAmount4\").style.display = \"none\"\r\n        document.getElementById(\"caldrun\").style.opacity = 0.5\r\n      }\r\n      \r\n    } \r\n    \r\n  } // End of selectIngredient\r\n\r\n\r\n  useEffect(() => {\r\n    if (!craftingSlots.includes(200)) {\r\n      document.getElementById(\"caldrun\").style.opacity = 1;\r\n      document.getElementById(\"caldrun\").style.pointerEvents = \"inherit\"\r\n  } else {\r\n    document.getElementById(\"caldrun\").style.opacity = 0.5;\r\n    document.getElementById(\"caldrun\").style.pointerEvents = \"none\"\r\n  }\r\n  })\r\n\r\n\r\n\r\n  const craftPotion = () => {\r\n    \r\n    document.getElementById(\"craftAmount1\").style.display = \"none\"\r\n    document.getElementById(\"craftAmount2\").style.display = \"none\"\r\n    document.getElementById(\"craftAmount3\").style.display = \"none\"\r\n    document.getElementById(\"craftAmount4\").style.display = \"none\"\r\n\r\n    craftingSlots[0] = 200\r\n    craftingSlots[1] = 200\r\n    craftingSlots[2] = 200\r\n    craftingSlots[3] = 200\r\n   \r\n    document.getElementById(\"craftPotion\").style.display = \"flex\"\r\n\r\n  //  playSound(\"craftPotion\")\r\n\r\n  } // End of craftPotion\r\n\r\n \r\n\r\n  return (\r\n    <div className='craftView'>\r\n\r\n      {powersList[4].freeze === \"active\" && powersList[3].protection !== \"active\" && <Icer />}\r\n      {powersList[18].mass_freeze === \"active\" && powersList[3].protection !== \"active\" && <MassFreeze />}\r\n      {powersList[7].gift === \"active\" && <ReceiveGiveGift />}\r\n\r\n      <Navbar focus={props}/>\r\n      <CraftPotion socket={socket}/>\r\n\r\n      <div className=\"craftView_middle\">\r\n        \r\n          <div className=\"craftView_middle_container\">\r\n            <div className=\"craftView_middle_ingred_container\">\r\n            <div className=\"craftView_extra_space_top\"></div>\r\n\r\n            \r\n                {ingredientsList.map((ingredient, i) => {\r\n                   if (ingredient.amount > 0) {\r\n                     return (\r\n                      <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.9 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} onClick={() => selectIngredient(\"add\", 200, ingredient.id)} className=\"craftView_ingredBox\">\r\n                        <img src={ingredient.image_normal} alt=\"\" className=\"craftView_ingred\" /> \r\n                        <p className=\"craftView_ingred_amount\">{ingredient.amount}</p>\r\n                      </motion.div>\r\n                     )\r\n                   } else if (ingredient.discovered === false) {\r\n                     return (\r\n                      <div key={i} className=\"craftView_ingredBox\">\r\n                      <img src={hidden_ingred} alt=\"\" className=\"craftView_ingred\" /> \r\n                      </div>\r\n                     )\r\n                   } else {\r\n                    return (\r\n                      <div key={i} className=\"craftView_ingredBox\">\r\n                      <img src={ingredient.image_normal} alt=\"\" className=\"craftView_ingred\" style={{opacity:0.5}} /> \r\n                      </div>\r\n                     )\r\n                   }\r\n                  })\r\n                }\r\n          \r\n            \r\n              \r\n              <div className=\"craftView_extra_space_bottom\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"craftView_footer\">\r\n          <div className=\"craftView_footer_container\">\r\n            <div className=\"craftView_footer_craftholder\">\r\n              <img onClick={() => selectIngredient(\"remove\", 0, 200)}  id=\"craftImg1\" src={craftList[0].image} alt=\"\" className=\"recipe_ingredient\" />\r\n              <p id=\"craftAmount1\" className=\"selected_ingredients_amount\">{craftList[0].amount}</p>\r\n            </div>\r\n            <div className=\"craftView_footer_craftholder\">\r\n              <img onClick={() => selectIngredient(\"remove\", 1, 200)} id=\"craftImg2\" src={craftList[1].image} alt=\"\" className=\"recipe_ingredient\" />\r\n              <p id=\"craftAmount2\" className=\"selected_ingredients_amount\">{craftList[1].amount}</p>\r\n            </div>\r\n\r\n            <img onClick={() => craftPotion()} id=\"caldrun\" src={caldrun} alt=\"\" className=\"footer_cauldrun\" />\r\n\r\n            <div className=\"craftView_footer_craftholder\">\r\n              <img onClick={() => selectIngredient(\"remove\", 2, 200)} id=\"craftImg3\" src={craftList[2].image} alt=\"\" className=\"recipe_ingredient\" />\r\n              <p id=\"craftAmount3\" className=\"selected_ingredients_amount\">{craftList[2].amount}</p>\r\n            </div>\r\n            <div className=\"craftView_footer_craftholder\">\r\n              <img onClick={() => selectIngredient(\"remove\", 3, 200)} id=\"craftImg4\" src={craftList[3].image} alt=\"\" className=\"recipe_ingredient\" />\r\n              <p id=\"craftAmount4\" className=\"selected_ingredients_amount\">{craftList[3].amount}</p>\r\n            </div>\r\n              \r\n          </div>\r\n        </div>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CraftView"],"names":["useState","giftArray","setGiftArray","dispatch","useDispatch","powersList","useSelector","state","powers","value","ingredientsList","ingredients","useEffect","gift","amount","colletArray","attackLevel7","gift_amount_1","gift_amount_2","gift_amount_3","ingred","Array","keys","sort","Math","random","i","push","giveGift_ingredients","document","getElementById","style","display","startGift","className","id","onClick","dectivate_power","power_name","src","exitBtn","alt","map","herb","image_normal","App","icer_duration_level","duration","attackLevel4","duration_level_1","duration_level_2","duration_level_3","playSound","setTimeout","icer","animate","opacity","transition","ease","times","MassFreeze","attackLevel18","props","reveal","transform","card_back","potion_fail","socket","showCard","setShowCard","craftList","crafting","recipeList","recipe","potionList","potions","playerStats","remove_for_crafting","matching","length","ing1_id","selected_id","ing2_id","ing3_id","ing4_id","earnedPoints","add_discovery_points","add_playerPoints","level","add_potion","batch","image_bronze","craftArray","resultArray","sortArr","indexOf","correctAmountID","ing1_amount","ing2_amount","ing3_amount","ing4_amount","result","golden_ingredient","ingredientNr","increase_potion_level","potion_Level","image_gold","image_silver","matchRecipe","image","craftingSlots","props_socket","window","selectIngredient","addRemove","nr","select_ingredients","total","decrease_ingredients","includes","pointerEvents","increase_ingredients","deSelect_ingredients","no_ingred","freeze","protection","Icer","mass_freeze","Navbar","focus","ingredient","motion","whileHover","scale","whileTap","type","stiffness","damping","discovered","hidden_ingred","caldrun"],"sourceRoot":""}