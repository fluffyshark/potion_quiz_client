{"version":3,"file":"static/js/119.a8cb7a41.chunk.js","mappings":"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","sources":["components/coinGainEffect/CoinGainEffect.js","pages/marketplace/MarketplaceSell.js","pages/marketplace/MarketplaceBuy.js","pages/marketplace/MarketPlaceData.js","pages/marketplace/Marketplace.js"],"sourcesContent":["import \"./coinGainEffect.css\"\r\nimport moneyIcon from \"../../image_assets/general/money_icon.webp\"\r\n\r\n\r\nexport function CoinGainEffect(amount) {\r\n    let click_X = 0\r\n    let click_Y = 0\r\n\r\n    const createCoin = (x, y) => {\r\n        const coin = document.createElement(\"img\");\r\n        coin.className = \"coin\";\r\n        coin.src = moneyIcon;\r\n        coin.style.left = `${x}px`;\r\n        coin.style.top = `${y}px`;\r\n    \r\n        return coin\r\n    }\r\n\r\n    console.log(moneyIcon)\r\n    \r\n    const createText = (x, y) => {\r\n        const text = document.createElement(\"div\");\r\n        text.className = \"text_animation\";\r\n        text.textContent = amount;\r\n        text.style.left = `${x}px`;\r\n        text.style.top = `${y}px`;\r\n        text.style.color = \"lightgreen\";\r\n        text.style.fontSize = \"20px\"\r\n        text.style.fontWeight = \"bold\"\r\n    \r\n        return text\r\n    }\r\n    \r\n   \r\n    const removeCoinFromDom = (coin, text) => {\r\n        const timeout = setTimeout(() => {\r\n            coin.remove()\r\n            text.remove()\r\n            clearTimeout(timeout)\r\n        }, 1000)\r\n    }\r\n    \r\n\r\n    window.addEventListener(\"click\", event => {\r\n        click_X = event.pageX\r\n        click_Y = event.pageY\r\n    })\r\n\r\n    \r\n\r\n    const showElement = () => {\r\n        setTimeout(function() {\r\n            const coin = createCoin(click_X, click_Y) \r\n            const text = createText(click_X, click_Y) \r\n            document.body.append(coin)\r\n            document.body.append(text)\r\n            removeCoinFromDom(coin, text)\r\n        }, 200);\r\n        \r\n    }\r\n\r\n\r\n    return showElement()\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport hidden_ingred from \"../../image_assets/general/hidden_ingred.webp\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { motion } from \"framer-motion\";\r\nimport \"./marketplace.css\"\r\nimport \"./responsive/responsive.css\"\r\nimport \"./responsive/tablet.css\"\r\n\r\n\r\n\r\nfunction MarketplaceSell({setSelectedID}) {\r\n\r\n  const ingredientsList = useSelector((state) => state.ingredients.value)\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"marketplace_middle_ingred_container\">\r\n\r\n\r\n      {ingredientsList.map((ingredient, i) => {\r\n          if (ingredient.amount > 0) {\r\n            return (\r\n              <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.9 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} className=\"marketplace_ingredBox\">\r\n                 <img onClick={() => {setSelectedID(i)}} src={ingredient.image_normal} alt=\"\" className=\"marketplace_ingred\" /> \r\n                <p className=\"marketplace_ingred_amount\">{ingredient.amount}</p>\r\n              </motion.div>\r\n            )\r\n          } else if (ingredient.discovered === false) {\r\n            return (\r\n              <div key={i} className=\"marketplace_ingredBox\">\r\n                <img src={hidden_ingred} alt=\"\" className=\"marketplace_ingred marketplace_no_ingred\" /> \r\n              </div>\r\n            )\r\n          } else {\r\n          return (\r\n            <div key={i} className=\"marketplace_ingredBox\">\r\n              <img src={hidden_ingred} alt=\"\" className=\"marketplace_ingred marketplace_no_ingred\" /> \r\n            </div>\r\n          )\r\n        }\r\n        })\r\n      }\r\n       \r\n             \r\n        <div className=\"marketplace_extra_space_bottom\"></div>\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nexport default MarketplaceSell","import React, { useEffect, useState } from 'react'\r\nimport \"./marketplace.css\"\r\nimport \"./responsive/responsive.css\"\r\nimport \"./responsive/tablet.css\"\r\nimport herbs from \"../../image_assets/HerbImageExport\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { increase_ingredients } from \"../../redux/IngredientReducer.js\"\r\nimport { reduce_coins_amount } from \"../../redux/CoinsReducer.js\"\r\nimport {Offerings} from \"./MarketPlaceData\"\r\n\r\n\r\nfunction MarketplaceBuy(props) {\r\n\r\n  let socket = props.socket\r\n\r\n  const [sellOffering, setSellOffering] = useState([{ingredient: 0, sellID: 0, price: 0}])\r\n\r\n  const dispatch = useDispatch()\r\n  const marketData = useSelector((state) => state.theMarket.value)\r\n  const playerCoins = useSelector((state) => state.coins.value)\r\n\r\n\r\n  function placeBuyOrder(sellID) {\r\n    // Filter marketData to get only the object with the sellID\r\n    let offering = marketData.filter(offer => offer.sellID === sellID);\r\n    // Send object to server via socket.io\r\n    socket.emit(\"sending_player_buyorder\", offering)\r\n    // Reduce coin amount for player\r\n    dispatch(reduce_coins_amount(offering[0].price))\r\n    // Add the ingredient to player \r\n    dispatch(increase_ingredients({id: offering[0].ingredient}))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setSellOffering(Offerings(marketData))\r\n  //  console.log(\"marketData in MarketPlaceBuy.js\", marketData)\r\n  }, [marketData])\r\n\r\n\r\n  \r\n  return (\r\n    \r\n    <div className=\"marketplace_middle_ingred_container\">\r\n          \r\n        {\r\n          sellOffering.map((item, i) => {\r\n            if (playerCoins.total >= item.price) {\r\n              return (\r\n                <div className='marketplace_offering' key={i} id={`item${i}`} onClick={() => placeBuyOrder(item.sellID)}>\r\n                  <img src={herbs[item.ingredient]} key={i} alt=\"\" className=\"marketplace_ingred\" />\r\n                  <div className=\"marketplace_offering_price_btn\"><p>{item.price}</p></div>\r\n                </div>\r\n               )\r\n            } else {\r\n              return (\r\n                <div className='marketplace_offering' key={i} id={`item${i}`} >\r\n                  <img src={herbs[item.ingredient]} key={i} alt=\"\" className=\"marketplace_ingred marketplace_no_ingred\" />\r\n                  <div className=\"marketplace_offering_price_btn\"><p>{item.price}</p></div>\r\n                </div>\r\n              )\r\n            }\r\n              \r\n          })\r\n        }\r\n      \r\n      \r\n        <div className=\"marketplace_extra_space_bottom\"></div>  \r\n      </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default MarketplaceBuy","\r\nexport const Offerings = (marketData) => {\r\n    \r\n    let allSellOrders = []\r\n    let offering = []\r\n\r\n    // marketData are read-only object name from array\r\n   marketData.map((data) => {\r\n    allSellOrders.push(data)\r\n   })\r\n\r\n  \r\n    // Sort array of objects by price, low to high\r\n    function compare( a, b ) {\r\n        if ( a.price < b.price ){\r\n          return -1;\r\n        }\r\n        if ( a.price > b.price ){\r\n          return 1;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      allSellOrders.sort( compare );\r\n\r\n     \r\n      // Removes dublicates of the same ingredient, as only one of each ingredient type will be shown at the time. \r\n      offering = allSellOrders.filter(\r\n        (order, index) => index === allSellOrders.findIndex(other => order.ingredient === other.ingredient));\r\n\r\n\r\n  //  console.log(\"IngredientID\", offering)\r\n    return offering\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"../../components/navbar/Navbar\"\r\nimport \"./marketplace.css\"\r\nimport \"./responsive/responsive.css\"\r\nimport \"./responsive/tablet.css\"\r\nimport Navbar from \"../../components/navbar/Navbar\"\r\nimport MarketplaceSell from \"./MarketplaceSell.js\"\r\nimport MarketplaceBuy from './MarketplaceBuy'\r\nimport no_ingred from \"../../image_assets/general/no_ingred.png\"\r\nimport add_btn from \"../../image_assets/general/add_btn.png\"\r\nimport reduce_btn from \"../../image_assets/general/reduce_btn.png\"\r\nimport done_btn from \"../../image_assets/general/done_btn.png\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { decrease_ingredients } from '../../redux/IngredientReducer'\r\nimport { add_coins_amount } from \"../../redux/CoinsReducer.js\"\r\nimport { motion } from \"framer-motion\";\r\nimport {CoinGainEffect} from \"../../components/coinGainEffect/CoinGainEffect\"\r\nimport envelope from \"../../image_assets/general/envelope.png\"\r\nimport { remove_buyLetter } from '../../redux/LetterReducer'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Marketplace(props) {\r\n\r\n  let socket = props.socket\r\n\r\n  const [selectedID, setSelectedID] = useState(200)\r\n  const [sellIngredient, setSellIngredient] = useState({image: no_ingred, ingredient: selectedID, price: 10, sellID: Math.floor((Math.random() * 9999999) + 1000000)})\r\n  const [marketIsBuy, setmarketIsBuy] = useState(true)\r\n  const [buyLetters, setBuyLetters] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n  const ingredientsList = useSelector((state) => state.ingredients.value)\r\n  const playerStats = useSelector((state) => state.playerStats.value) \r\n  const gameStats = useSelector((state) => state.GameData.value)\r\n  const buyletter = useSelector((state) => state.buyletter.value)\r\n\r\n\r\n  useEffect(() => {\r\n    if (marketIsBuy) {\r\n      document.getElementById(\"marketplace_menu_sell\").style.backgroundColor = \"#1f80e0\"\r\n      document.getElementById(\"marketplace_menu_buy\").style.backgroundColor = \"#1c62b3\"\r\n    } else {\r\n      document.getElementById(\"marketplace_menu_sell\").style.backgroundColor = \"#1c62b3\"\r\n      document.getElementById(\"marketplace_menu_buy\").style.backgroundColor = \"#1f80e0\"\r\n    }\r\n  }, [marketIsBuy]);\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    if (selectedID === 200) {\r\n      setSellIngredient({image: no_ingred, price: sellIngredient.price, sellID: Math.floor((Math.random() * 9999999) + 1000000)})\r\n    } else {\r\n      setSellIngredient({image: ingredientsList[selectedID].image_normal, price: sellIngredient.price, sellID: Math.floor((Math.random() * 9999999) + 1000000)})\r\n    }\r\n  }, [selectedID])\r\n\r\n\r\n\r\n  function changePrice(direction) {\r\n    if (direction === \"increase\") {\r\n      setSellIngredient(prev => ({...prev, price: prev.price + 1}))\r\n    } else if (direction === \"decrease\") {\r\n      setSellIngredient(prev => ({...prev, price: prev.price - 1}))\r\n      if (sellIngredient.price < 1) {setSellIngredient(prev => ({...prev, price: prev.price = 1}))}\r\n    }\r\n  }\r\n\r\n\r\n\r\n// Add sold ingredient price to state \r\n  useEffect(() => { \r\n    setBuyLetters(buyletter) \r\n  //  console.log(\"buyletter\", buyletter)\r\n  //  console.log(\"buyLetters\", buyLetters)\r\n  }, [buyletter])\r\n\r\n\r\n\r\n  function clickOnLetter(letterprice, index) {\r\n    // Add money popup animation at mouse potition\r\n    CoinGainEffect(letterprice)\r\n    // Removing price stored in useState. Envelope image with it. NOT WORKING\r\n  //  setBuyLetters([...buyLetters.slice(0, index), ...buyLetters.slice(index + 1, buyLetters.length)]);\r\n    // Removing price stored in reducer. \r\n    dispatch(remove_buyLetter(index))\r\n    // Increase coins with the buy price\r\n    dispatch(add_coins_amount(letterprice))\r\n  }\r\n\r\n\r\n\r\n  function placeSellOrder() {\r\n    // Get Player ID\r\n  //  let playerID = []\r\n    //if (gameStats.hasOwnProperty('data')) {playerID = gameStats.data.filter(player => player.playerName === playerStats.playerName)} else {playerID = gameStats.filter(player => player.playerName === playerStats.playerName)}\r\n    // Send sell order to server by socket.io\r\n    socket.emit(\"sending_player_sellorder\", {playerID: playerStats.playerID, playerName: playerStats.playerName, ingredient: selectedID, price: sellIngredient.price, gameCode: playerStats.gameCode, sellID: sellIngredient.sellID})\r\n    // Reduce the amount for the sold ingredient\r\n    dispatch(decrease_ingredients({id:selectedID}))\r\n    // Reset state and render \r\n    setSellIngredient({image: no_ingred, ingredient: selectedID, price: 10, sellID: Math.floor((Math.random() * 9999999) + 1000000)})\r\n    setSelectedID(200)\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div className='marketplace'>\r\n        <Navbar focus={props}/>\r\n        <div className=\"marketplace_middle\">\r\n          <div className=\"marketplace_middle_container\">\r\n          \r\n          <div className=\"marketplace_menu_container\">\r\n                <div className=\"marketplace_menu\">\r\n                    <div className=\"marketplace_menu_filler_left\"></div>\r\n                    <div className=\"marketplace_menu_potions_ingreds\">\r\n                        <Link className='link' to=\"/auction\"><div className=\"marketplace_menu_potions_btn market_menu_btns\"><p>POTIONS</p></div></Link>\r\n                        <Link className='link' to=\"/marketplace\"><div className=\"marketplace_menu_indredients_btn market_menu_btns\"><p>INGREDIENTS</p></div></Link>\r\n                    </div>\r\n                    <div className=\"marketplace_menu_buysell\">\r\n                    <div className=\"menu_buysell_text\" id=\"marketplace_menu_buy\" onClick={() => setmarketIsBuy(true)}><p>BUY</p></div>\r\n                        <div className=\"menu_buysell_text\" id=\"marketplace_menu_sell\" onClick={() => setmarketIsBuy(false)}><p>SELL</p></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n              \r\n            {marketIsBuy ? ( <MarketplaceBuy socket={socket} /> ) : ( <MarketplaceSell setSelectedID={setSelectedID} /> )}\r\n           \r\n          </div>\r\n        </div>\r\n        <div className=\"marketplace_footer\">\r\n          <div className=\"marketplace_footer_container\">  \r\n\r\n\r\n            {marketIsBuy ? ( \r\n              \r\n              <>\r\n                {\r\n                buyLetters.length <= 0 ? <p className='marketplace_footer_buy_process'>NO NEW SALES</p> \r\n                : \r\n                buyLetters.map((letter, i) => {return (<motion.img whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.9 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} onClick={() => {clickOnLetter(letter, i)}} src={envelope} className=\"marketplace_letterImg\" />)})\r\n                }\r\n              </>\r\n              \r\n            ) : ( \r\n            \r\n              <>\r\n                <p className='marketplace_offer_text1'>OFFER TO SELL</p>\r\n                <img src={sellIngredient.image} alt=\"\" className=\"marketplace_offer_ingred\" />\r\n                <p className='marketplace_offer_text2'>FOR</p>\r\n                <motion.img whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.9 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} onClick={() => {changePrice(\"increase\")}} src={add_btn} alt=\"\" className=\"marketplace_offer_btns\" />\r\n                <p className='marketplace_offer_text3'>{sellIngredient.price}</p>\r\n                <motion.img whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.9 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} onClick={() => {changePrice(\"decrease\")}} src={reduce_btn} alt=\"\" className=\"marketplace_offer_btns\" />\r\n\r\n                {selectedID === 200 ?  \r\n                  <motion.img whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.9 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} onClick={() => {placeSellOrder()}} src={done_btn} alt=\"\" className=\"marketplace_offer_done_btn_no_ingred\" />   \r\n                  :    \r\n                  <motion.img whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.9 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} onClick={() => {placeSellOrder()}} src={done_btn} alt=\"\" className=\"marketplace_offer_done_btn\" /> }\r\n           \r\n              </>\r\n\r\n            )}\r\n                  \r\n\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Marketplace"],"names":["CoinGainEffect","amount","click_X","click_Y","console","log","moneyIcon","window","addEventListener","event","pageX","pageY","setTimeout","coin","x","y","document","createElement","className","src","style","left","top","createCoin","text","textContent","color","fontSize","fontWeight","createText","body","append","timeout","remove","clearTimeout","removeCoinFromDom","setSelectedID","ingredientsList","useSelector","state","ingredients","value","map","ingredient","i","motion","whileHover","scale","whileTap","transition","type","stiffness","damping","onClick","image_normal","alt","discovered","hidden_ingred","props","socket","useState","sellID","price","sellOffering","setSellOffering","dispatch","useDispatch","marketData","theMarket","playerCoins","coins","useEffect","allSellOrders","data","push","sort","a","b","filter","order","index","findIndex","other","Offerings","item","total","id","offering","offer","emit","reduce_coins_amount","increase_ingredients","placeBuyOrder","herbs","selectedID","image","no_ingred","Math","floor","random","sellIngredient","setSellIngredient","marketIsBuy","setmarketIsBuy","buyLetters","setBuyLetters","playerStats","buyletter","GameData","changePrice","direction","prev","placeSellOrder","playerID","playerName","gameCode","decrease_ingredients","getElementById","backgroundColor","Navbar","focus","to","length","letter","letterprice","remove_buyLetter","add_coins_amount","envelope","done_btn"],"sourceRoot":""}