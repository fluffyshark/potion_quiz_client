{"version":3,"file":"static/js/441.17087f0e.chunk.js","mappings":"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","sources":["components/powers/GiveGift.js","components/powers/Icer.js","components/powers/MassFreeze.js","pages/potions/LevelProgressBar.js","pages/potions/PotionSelectPlayers.js","pages/potions/PotionInfo.js","pages/potions/PotionsView.js","components/powers/Reveal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport exitBtn from \"../../image_assets/general/exit_btn.png\"\r\nimport \"./powers.css\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { dectivate_power } from \"../../redux/PowerReducer\"\r\nimport { giveGift_ingredients } from \"../../redux/IngredientReducer\"\r\n\r\n\r\nfunction ReceiveGiveGift() {\r\n\r\n  const [giftArray, setGiftArray] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n  const powersList = useSelector((state) => state.powers.value)\r\n  const ingredientsList = useSelector((state) => state.ingredients.value)\r\n\r\n\r\n  function startGift() {\r\n    let amount = 0\r\n    let colletArray = []\r\n\r\n    if (powersList[7].attackLevel7 === 1) {amount = powersList[7].gift_amount_1}\r\n    if (powersList[7].attackLevel7 === 2) {amount = powersList[7].gift_amount_2}\r\n    if (powersList[7].attackLevel7 === 3) {amount = powersList[7].gift_amount_3}\r\n\r\n    /// Creating, filling, shuffling an array with the id of all ingredients  \r\n    var ingred = [...Array(180).keys()].sort(() => Math.random() - 0.5);\r\n    \r\n    /// Assigning as many ingredient's id, as the gifted amount level allows \r\n    for (let i = 0; i < amount; i++) {colletArray.push(ingred[i])}\r\n\r\n    /// Assign ingredients' id to giftArray, that will be mapped out\r\n    setGiftArray(colletArray)\r\n\r\n    /// Add the ingredients to user's collection via ingredientReducer\r\n    dispatch(giveGift_ingredients({colletArray}))\r\n\r\n    /// Show Give Gift popup layout\r\n    document.getElementById(\"give_gift\").style.display = \"flex\"\r\n\r\n  } // End of startGift()\r\n\r\n  \r\n  useEffect(() => {if (powersList[7].gift === \"active\") {startGift()}}, [powersList[7].gift])\r\n\r\n  function exitGiftView() {\r\n    document.getElementById(\"give_gift\").style.display = \"none\"\r\n    dispatch(dectivate_power({power_name: \"GIVE GIFT\"}))\r\n  }\r\n\r\n  return (\r\n    <div className=\"give_gift_container\" id=\"give_gift\">\r\n      <div className=\"give_gift_scroll\">\r\n        <div className=\"give_gift_scroll_top\"><img onClick={() => {exitGiftView()}} src={exitBtn} alt=\"\" /></div>\r\n        <div className=\"give_gift_scroll_text\">\r\n            <p className=\"give_gift_scroll_text_title\">YOU GOT A GIFT</p>\r\n            <p className=\"give_gift_scroll_text_sender\">Sent by a true friend</p>\r\n        </div>\r\n        <div className=\"give_gift_scroll_wrap\">\r\n          {\r\n            giftArray.map((herb, i) => {\r\n              return <img key={i} className='give_gift_scroll_wrap_herbs' src={ingredientsList[giftArray[i]].image_normal} alt=\"\" />\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReceiveGiveGift\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import \"./powers.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { dectivate_power } from \"../../redux/PowerReducer.js\"\r\nimport icer from \"../../image_assets/powers/icer.webp\"\r\nimport { motion } from \"framer-motion\";\r\nimport { playSound } from \"../playSound/playSound\";\r\n\r\n\r\nexport default function App() {\r\n\r\n  const dispatch = useDispatch()\r\n  const powersList = useSelector((state) => state.powers.value)\r\n\r\n  // Dictate the duration of freeze power depending on potion level.\r\n  // This should be rewritten and sent to other players via Socket IO\r\n  const icer_duration_level = () => {\r\n    let duration = 0\r\n\r\n    if (powersList[4].attackLevel4 === 1) {duration = powersList[4].duration_level_1}\r\n    if (powersList[4].attackLevel4 === 2) {duration = powersList[4].duration_level_2}\r\n    if (powersList[4].attackLevel4 === 3) {duration = powersList[4].duration_level_3}\r\n\r\n    playSound(\"freeze\")\r\n\r\n    return duration\r\n  }\r\n\r\n\r\n  setTimeout(function() {\r\n    dispatch(dectivate_power({power_name: \"FREEZE\"}))\r\n    document.getElementById(\"icer\").style.display = \"none\"\r\n  }, icer_duration_level()*1000);\r\n\r\n\r\n  return (\r\n    <motion.img\r\n      src={icer}\r\n      className=\"power_icer\"\r\n      id=\"icer\"\r\n      animate={{\r\n        opacity: [0, 0.8, 0.8, 0],\r\n      }}\r\n      transition={{\r\n        duration: icer_duration_level(),\r\n        ease: \"easeInOut\",\r\n        times: [0, 0.2, 0.9, 1],\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import \"./powers.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { dectivate_power } from \"../../redux/PowerReducer.js\"\r\nimport icer from \"../../image_assets/powers/icer.webp\"\r\nimport { motion } from \"framer-motion\";\r\nimport { playSound } from \"../playSound/playSound\";\r\n\r\n\r\nexport default function MassFreeze() {\r\n\r\n  const dispatch = useDispatch()\r\n  const powersList = useSelector((state) => state.powers.value)\r\n\r\n  // Dictate the duration of freeze power depending on potion level.\r\n  // This should be rewritten and sent to other players via Socket IO\r\n  const icer_duration_level = () => {\r\n    let duration = 0\r\n\r\n    if (powersList[18].attackLevel18 === 1) {duration = powersList[18].duration_level_1}\r\n    if (powersList[18].attackLevel18 === 2) {duration = powersList[18].duration_level_2}\r\n    if (powersList[18].attackLevel18 === 3) {duration = powersList[18].duration_level_3}\r\n\r\n    playSound(\"freeze\")\r\n\r\n    return duration\r\n  }\r\n\r\n\r\n  setTimeout(function() {\r\n    dispatch(dectivate_power({power_name: \"MASS FREEZE\"}))\r\n    document.getElementById(\"freeze\").style.display = \"none\"\r\n  }, icer_duration_level()*1000);\r\n\r\n\r\n  return (\r\n    <motion.img\r\n      src={icer}\r\n      className=\"power_mass_freeze\"\r\n      id=\"freeze\"\r\n      animate={{\r\n        opacity: [0, 0.8, 0.8, 0],\r\n      }}\r\n      transition={{\r\n        duration: icer_duration_level(),\r\n        ease: \"easeInOut\",\r\n        times: [0, 0.2, 0.9, 1],\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { motion } from \"framer-motion\";\r\nimport levelBtn from \"../../image_assets/general/level_btn.png\"\r\nimport { reduce_coins_amount } from \"../../redux/CoinsReducer.js\"\r\nimport { add_exp_amount } from \"../../redux/LevelExpReducer\"\r\nimport progressbar_fill from \"../../image_assets/general/progressbar_fill.png\"\r\nimport {playSound} from \"../../components/playSound/playSound\"\r\n\r\nfunction LevelProgressBar() {\r\n\r\n    const dispatch = useDispatch()\r\n    const coinbag = useSelector((state) => state.coins.value)\r\n    const levelExp = useSelector((state) => state.levelExp.value)\r\n\r\n\r\n      // When pressing levelBtn\r\n    const buyLevel = () => {\r\n    dispatch(reduce_coins_amount(50))\r\n    dispatch(add_exp_amount(1))\r\n    playSound(\"coindrop\")   \r\n  }\r\n\r\n\r\n  // Progress bar controller \r\n  useEffect(() => {\r\n    var exp = 1\r\n    if (levelExp.currentLevel === 1) {exp = levelExp.totalExp / levelExp.level_2_requirement * 110}\r\n    if (levelExp.currentLevel === 2) {exp = (levelExp.totalExp - 10) / levelExp.level_3_requirement * 196}\r\n    if (levelExp.currentLevel === 3) {exp = (levelExp.totalExp - 20) / levelExp.level_4_requirement * 230}\r\n    if (levelExp.currentLevel === 4) {exp = (levelExp.totalExp - 35) / levelExp.level_5_requirement * 330}\r\n    if (levelExp.currentLevel === 5) {exp = 100; document.getElementById(\"levelBtn\").style.display = \"none\"}\r\n\r\n    document.getElementById(\"progressBar\").style.width = `${exp}%`\r\n\r\n  })\r\n\r\n\r\n\r\n  // Enable / disable levelBtn if player has enough coins\r\n  useEffect(() => {\r\n    if (coinbag.total < 50) {document.getElementById(\"levelBtn\").style.opacity = 0.5; document.getElementById(\"levelBtn\").style.pointerEvents = \"none\"}\r\n    if (coinbag.total > 49) {document.getElementById(\"levelBtn\").style.opacity = 1; document.getElementById(\"levelBtn\").style.pointerEvents = \"auto\"}\r\n    /// ADD FUNCTIONALITY TO DISABLE BUTTON\r\n  },[coinbag.total])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"potionView_middle_level\">\r\n        <p className=\"potionView_middle_level_title\">{levelExp.title}</p>\r\n        <div className=\"potionView_middle_level_progressbar\">\r\n            <div className=\"potionView_middle_level_progressbar_limiter\"><img id=\"progressBar\" src={progressbar_fill} alt=\"\" className=\"progressbar_fill\" /></div>\r\n        </div>\r\n        <motion.img whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.9 }} transition={{ type: \"spring\", stiffness: 400, damping: 17 }}  onClick={() => {buyLevel()}} src={levelBtn} alt=\"\" id=\"levelBtn\" className=\"potionView_middle_level_btn\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LevelProgressBar","import React, { useEffect, useState } from 'react'\r\nimport \"./potionSelectPlayers.css\"\r\nimport \"./responsive/tablet.css\"\r\nimport { useSelector } from \"react-redux\"\r\nimport {motion} from \"framer-motion\"\r\nimport activateBtn from \"../../image_assets/general/select_player_btn.png\"\r\nimport { playSound } from '../../components/playSound/playSound'\r\n\r\nfunction PotionSelectPlayers(props) {\r\n\r\n    let socket = props.socket.socket\r\n\r\n    const [emitData, setEmitData] = useState([])\r\n    const [maxPlayerTargets, setMaxPlayerTargets] = useState(0)\r\n    const [sound, setSound] = useState(\"\")\r\n\r\n    const gameStats = useSelector((state) => state.GameData.value)\r\n    const playerStats = useSelector((state) => state.playerStats.value)\r\n    const potionsList = useSelector((state) => state.potions.value)\r\n\r\n    useEffect(() => {\r\n        if (props.selectPlayer[0] === \"blessing\") {document.getElementById(\"angelOrDemon\").className = \"potionSelectPlayers_centerSection_angel\"; setSound(\"useBlessing\")}\r\n        if (props.selectPlayer[0] === \"curse\") {document.getElementById(\"angelOrDemon\").className = \"potionSelectPlayers_centerSection_demon\"; setSound(\"useCurse\")}\r\n    }, [props])\r\n    \r\n\r\n    // Send data about potion/targets to selected players through server, then return user to PotionView\r\n    function handleActivateBtn() {\r\n        socket.emit(\"potion_effect\", {emitData});\r\n        props.hideSelectPlayers()\r\n        playSound(sound)\r\n    }\r\n\r\n\r\n\r\n    // Limit the number of players the user can select/target based on the potion type\r\n    const playerLimitByPotion = (potionName) => {\r\n        let playerLimit = 1\r\n\r\n        switch (potionName) {\r\n            case \"GIFT EXP\": playerLimit = 2; break;\r\n            case \"FREEZE\": playerLimit = 1; break;\r\n            case \"POINT POISON\": playerLimit = 1; break;\r\n            case \"GIVE GIFT\": playerLimit = 2; break;\r\n            case \"CONFUSION\": playerLimit = 1; break;\r\n            case \"MASS PROTECTION\": playerLimit = 3; break;\r\n            case \"BLOCKER\": playerLimit = 1; break;\r\n            case \"MASS FREEZE\": playerLimit = 3; break;\r\n            case \"GIVE GIFT\": playerLimit = 2; break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        return playerLimit\r\n    \r\n    } // End of playerLimitByPotion()\r\n\r\n\r\n\r\n    // Add the specific effects for each potion, identfied by it's name   \r\n    const powerEffect = (potionName) => {\r\n        let effect = 0\r\n\r\n        switch (potionName) {\r\n            case \"GIFT EXP\": effect = potionsList[0].level; break;\r\n            case \"FREEZE\": effect = potionsList[4].level; break;\r\n            case \"POINT POISON\": effect = potionsList[6].level; break;\r\n            case \"GIVE GIFT\": effect = potionsList[7].level; break;\r\n            case \"BLOCKER\": effect = potionsList[14].level; break;\r\n            case \"MASS FREEZE\": effect = potionsList[18].level; break;\r\n\r\n            default: break;\r\n        }\r\n\r\n        return effect\r\n\r\n    } // End of powerEffect()\r\n\r\n\r\n\r\n    // When clicking on player name buttons, then button should turn green. Clicked player are added to useState and if the chosen potion\r\n    // allows more players, then user can select more players before being able to press activate button. \r\n    function selectChosenPlayers(id, playerName) {\r\n\r\n        // Get the name of the used potion from PotionView\r\n        let potionName = props.selectPlayer[1]\r\n\r\n        let effect = powerEffect(potionName)\r\n\r\n        // Used for declaring if user clicked to select or deselect player\r\n        let clickedToSelect = true        \r\n\r\n        // If there is no player already selected then add the clicked player\r\n        if (emitData.length === 0) {\r\n            setEmitData(emitData => [...emitData, {id: id, potionName: potionName, playerName: playerName, effect: effect}]) \r\n            setMaxPlayerTargets(maxPlayerTargets + 1)\r\n            // Turn clicked button green\r\n            document.getElementById(playerName).className = \"potionSelectPlayers_centerSection_collection_playername_selected\"    \r\n        } else {\r\n            for (let i = 0; i < emitData.length; i++) {\r\n                // if clicked player is already selected (playername stored in useState), then remove clicked player\r\n                if (emitData[i].playerName === playerName) {\r\n                    setEmitData(emitData.filter(item => item.playerName !== playerName));\r\n                    // Remove one from maxPlayerTargets, thus allowing more players to be selected\r\n                    setMaxPlayerTargets(maxPlayerTargets - 1)\r\n                    // Returns button \"selected\" green button to blue\r\n                    document.getElementById(emitData[i].playerName).className = \"potionSelectPlayers_centerSection_collection_playername\";\r\n                    // If playerName is already in the list then player is clicking button to remove player, alas the player sould be prevented from adding at the same time\r\n                    clickedToSelect = false\r\n                }   \r\n            }\r\n                // Limiting how many player the user can target (max is always three)\r\n                if (maxPlayerTargets < playerLimitByPotion(potionName)) {\r\n                    // If this the click is for selecting and not deselecting\r\n                    if (clickedToSelect === true) {\r\n                        setEmitData(emitData => [...emitData, {id: id, potionName: potionName, playerName: playerName, effect: effect}])\r\n                        setMaxPlayerTargets(maxPlayerTargets + 1)\r\n                        // Turn clicked button green\r\n                        document.getElementById(playerName).className = \"potionSelectPlayers_centerSection_collection_playername_selected\";\r\n                    }\r\n                }\r\n\r\n            } \r\n        \r\n    } // End of selectChosenPlayers()\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='potionSelectPlayers'>\r\n            <div id=\"angelOrDemon\" className=\"potionSelectPlayers_centerSection_angel\">\r\n                <p className=\"potionSelectPlayers_centerSection_potionName\">{props.selectPlayer[1]}</p>\r\n                <div className=\"potionSelectPlayers_centerSection_collection\">\r\n                    \r\n                    <div className=\"potionSelectPlayers_centerSection_collection_scroll\">\r\n                        \r\n                        {gameStats.map((player, i) => {\r\n                            if (player.playerName === playerStats.playerName) {} // Removes user himself from list of players\r\n                            else { return (<motion.div key={i} whileHover={{ scale: 0.95 }} whileTap={{ scale: 0.8 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} onClick={() => selectChosenPlayers(player.id, player.playerName)} id={player.playerName} className=\"potionSelectPlayers_centerSection_collection_playername\">{player.playerName}</motion.div>)}\r\n                        })}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <motion.img whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.95 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} src={activateBtn} alt=\"\" onClick={() => handleActivateBtn()} className=\"potionSelectPlayers_centerSection_activateBtn\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PotionSelectPlayers\r\n\r\n","import React from 'react'\r\nimport \"./potionInfo.css\"\r\nimport exitBtn from \"../../image_assets/general/exit_btn.png\"\r\nimport flasks from \"../../image_assets/FlaskImageExport\"\r\n\r\nfunction PotionInfo(potionID) {\r\n\r\n    let infoID = potionID.potionID\r\n    let potion;\r\n\r\n    switch (infoID) {\r\n        case 0: potion = potionInfoData[0]; break;  case 1: potion = potionInfoData[1]; break;\r\n        case 2: potion = potionInfoData[2]; break;  case 3: potion = potionInfoData[3]; break;\r\n        case 4: potion = potionInfoData[4]; break;  case 5: potion = potionInfoData[5]; break;\r\n        case 6: potion = potionInfoData[6]; break;  case 7: potion = potionInfoData[7]; break;\r\n        case 8: potion = potionInfoData[8]; break;  case 9: potion = potionInfoData[9]; break;\r\n        case 10: potion = potionInfoData[10]; break;  case 11: potion = potionInfoData[11]; break; \r\n        case 12: potion = potionInfoData[12]; break;  case 13: potion = potionInfoData[13]; break;\r\n        case 14: potion = potionInfoData[14]; break;  case 15: potion = potionInfoData[15]; break;\r\n        case 16: potion = potionInfoData[16]; break;  case 17: potion = potionInfoData[17]; break;\r\n        case 18: potion = potionInfoData[18]; break;  case 19: potion = potionInfoData[19]; break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n\r\n\r\n    function exitInfoView() {document.getElementById(\"potionInfo\").style.display = \"none\"}\r\n\r\n  return (\r\n    <div className=\"potionInfo_container\" id=\"potionInfo\">\r\n      <div className=\"potionInfo_scroll\">\r\n        <div className=\"potionInfo_scroll_top\"><img onClick={() => {exitInfoView()}} src={exitBtn} alt=\"\" /></div>\r\n        <div className=\"potionInfo_scroll_title\">{potion.name}</div>\r\n        <div className=\"potionInfo_scroll_description\">{potion.description}</div>\r\n        <div className=\"potionInfo_scroll_flask\"><img src={potion.flaskImage} alt=\"\" /></div>\r\n        <div className=\"potionInfo_scroll_effect\">\r\n          <p id=\"effectTitle\">{potion.effectTitle}</p>\r\n          <p>{potion.effectBronze}</p>\r\n          <p>{potion.effectSilver}</p>\r\n          <p>{potion.effectGold}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PotionInfo\r\n\r\n// Display PotionInfo\r\nexport const DisplayInfo = () => {document.getElementById(\"potionInfo\").style.display = \"flex\"}\r\n\r\n\r\n\r\n\r\nconst potionInfoData = [\r\n  {\r\n    name: \"GIVE GIFT\",\r\n    description: \"Gives two players a gift of experience to help unlock new potions.\",\r\n    flaskImage: flasks[0],\r\n    effectTitle: \"EXP GIFTED (of TOTAL)\",\r\n    effectBronze: \"Bronze: 2%\", \r\n    effectSilver: \"Silver: 4%\", \r\n    effectGold: \"Gold: 6%\", \r\n  },\r\n  {\r\n    name: \"DOUBLE POINTS\",\r\n    description: \"Double you income for each question.\",\r\n    flaskImage: flasks[1],\r\n    effectTitle: \"DURATION\",\r\n    effectBronze: \"Bronze:  60 seconds\", \r\n    effectSilver: \"Silver:   120 seconds\", \r\n    effectGold: \"Gold:   200 seconds\", \r\n  },\r\n  {\r\n    name: \"SPEED UP\",\r\n    description: \"Reduces the wait time between questions.\",\r\n    flaskImage: flasks[2],\r\n    effectTitle: \"WAIT TIME REDUCTION\",\r\n    effectBronze: \"Bronze: -25% for 60 seconds\", \r\n    effectSilver: \"Silver: -75% for 120 seconds\", \r\n    effectGold: \"Gold: -100% for 200 seconds\", \r\n  },\r\n  {\r\n    name: \"PROTECTION\",\r\n    description: \"Gives you protection agains all harmful potions.\",\r\n    flaskImage: flasks[3],\r\n    effectTitle: \"DURATION\",\r\n    effectBronze: \"Bronze: 60 seconds\", \r\n    effectSilver: \"Silver: 180 seconds\", \r\n    effectGold: \"Gold: 300 seconds\", \r\n  },\r\n  {\r\n    name: \"FREEZE\",\r\n    description: \"Makes your target unable to do anything by freezing the screen.\",\r\n    flaskImage: flasks[4],\r\n    effectTitle: \"DURATION\",\r\n    effectBronze: \"Bronze: 10 seconds\", \r\n    effectSilver: \"Silver: 15 seconds\", \r\n    effectGold: \"Gold: 20 seconds\", \r\n  },\r\n  {\r\n    name: \"EASY MODE\",\r\n    description: \"You will only need to choose between two answer alternatives.\",\r\n    flaskImage: flasks[5],\r\n    effectTitle: \"NUMBER OF USES\",\r\n    effectBronze: \"Bronze: 5 times\", \r\n    effectSilver: \"Silver: 10 times\", \r\n    effectGold: \"Gold: 30 times\", \r\n  },\r\n  {\r\n    name: \"POINT POISON\",\r\n    description: \"Your target will lose 2 gold every second this potion is active.\",\r\n    flaskImage: flasks[6],\r\n    effectTitle: \"DURATION\",\r\n    effectBronze: \"Bronze: 30 seconds\", \r\n    effectSilver: \"Silver: 60 seconds\", \r\n    effectGold: \"Gold: 120 seconds\", \r\n  },\r\n  {\r\n    name: \"GIVE GIFT\",\r\n    description: \"Gift two players a set crafting ingredients.\",\r\n    flaskImage: flasks[7],\r\n    effectTitle: \"AMOUNT OF INGREDIENTS\",\r\n    effectBronze: \"Bronze: 4 ingredients\", \r\n    effectSilver: \"Silver: 12 ingredients\", \r\n    effectGold: \"Gold: 20 ingredients\", \r\n  },\r\n  {\r\n    name: \"TRANSMUTATION\",\r\n    description: \"Transform several ingredients into one of your choosing.\",\r\n    flaskImage: flasks[8],\r\n    effectTitle: \"INGREDIENT REQUIREMENT\",\r\n    effectBronze: \"Bronze: 12 indredients\", \r\n    effectSilver: \"Silver: 8 ingredients\", \r\n    effectGold: \"Gold: 4 ingredients\", \r\n  },\r\n  {\r\n    name: \"TRIPPLE POINTS\",\r\n    description: \"Tripple you income for each question.\",\r\n    flaskImage: flasks[9],\r\n    effectTitle: \"DURATION\",\r\n    effectBronze: \"Bronze: 60 seconds\", \r\n    effectSilver: \"Silver: 120 seconds\", \r\n    effectGold: \"Gold: 200 seconds\", \r\n  },\r\n  {\r\n    name: \"JUKEBOX\",\r\n    description: \"The host starts playing background music of your choosing.\",\r\n    flaskImage: flasks[10],\r\n    effectTitle: \"AVAILABLE OPTIONS\",\r\n    effectBronze: \"Bronze: 4 melodies\", \r\n    effectSilver: \"Silver: 8 melodies\", \r\n    effectGold: \"Gold: 12 melodies\", \r\n  },\r\n  {\r\n    name: \"PRICE RUNNER\",\r\n    description: \"Get disconts at the shop for 60 seconds.\",\r\n    flaskImage: flasks[11],\r\n    effectTitle: \"DISCOUNTS\",\r\n    effectBronze: \"Bronze: 10% price reduction\", \r\n    effectSilver: \"Silver: 25% price reduction\", \r\n    effectGold: \"Gold: 40% price reduction\", \r\n  },\r\n  {\r\n    name: \"MASS PROTECTION\",\r\n    description: \"Gives you and three others protection agains all harmful potions.\",\r\n    flaskImage: flasks[12],\r\n    effectTitle: \"DURATION\",\r\n    effectBronze: \"Bronze: 60 seconds\", \r\n    effectSilver: \"Silver: 180 seconds\", \r\n    effectGold: \"Gold: 300 seconds\", \r\n  },\r\n  {\r\n    name: \"REVEAL\",\r\n    description: \"Reveal ingredient's correct amount for random potions.\",\r\n    flaskImage: flasks[13],\r\n    effectTitle: \"NUMBER OF REVEALS\",\r\n    effectBronze: \"Bronze:  1 reveal\", \r\n    effectSilver: \"Silver:   2 reveals\", \r\n    effectGold: \"Gold:    4 reveals\", \r\n  },\r\n  {\r\n    name: \"BLOCKER\",\r\n    description: \"Throw slime on your target's screen and locks him in the quiz section.\",\r\n    flaskImage: flasks[14],\r\n    effectTitle: \"DURATION\",\r\n    effectBronze: \"Bronze: 30 seconds\", \r\n    effectSilver: \"Silver: 60 seconds\", \r\n    effectGold: \"Gold: 120 seconds\", \r\n  },\r\n  {\r\n    name: \"DOUBLE BATCH\",\r\n    description: \"Craft two potions instead of one while this potion is active.\",\r\n    flaskImage: flasks[15],\r\n    effectTitle: \"DURATION\",\r\n    effectBronze: \"Bronze: 30 seconds\", \r\n    effectSilver: \"Silver: 120 seconds\", \r\n    effectGold: \"Gold: 200 seconds\", \r\n  },\r\n  {\r\n    name: \"EPIC CHALLENGE\",\r\n    description: \"Clear the challenges and get a random rewards for it.\",\r\n    flaskImage: flasks[16],\r\n    effectTitle: \"CHALLENGES\",\r\n    effectBronze: \"Bronze: 10 correct question in a row\", \r\n    effectSilver: \"Silver: 25 correct question in a row\", \r\n    effectGold: \"Gold: 50 correct question in a row\", \r\n  },\r\n  {\r\n    name: \"STREAK BONUS\",\r\n    description: \"Get increasing bonus income for every correct question in a row. While you stay in quiz section.\",\r\n    flaskImage: flasks[17],\r\n    effectTitle: \"BONUS INCREASE\",\r\n    effectBronze: \"Bronze: +1 per correct question\", \r\n    effectSilver: \"Silver: +2 per correct question\", \r\n    effectGold: \"Gold: +5 per correct question\", \r\n  },\r\n  {\r\n    name: \"MASS FREEZE\",\r\n    description: \"Makes three players unable to do anything by freezing the screen.\",\r\n    flaskImage: flasks[18],\r\n    effectTitle: \"DURATION\",\r\n    effectBronze: \"Bronze: 60 seconds\", \r\n    effectSilver: \"Silver: 120 seconds\", \r\n    effectGold: \"Gold: 200 seconds\", \r\n  },\r\n  {\r\n    name: \"GOLDEN POINTS\",\r\n    description: \"Makes the each question worth 5x the normal income.\",\r\n    flaskImage: flasks[19],\r\n    effectTitle: \"DURATION\",\r\n    effectBronze: \"Bronze: 60 seconds\", \r\n    effectSilver: \"Silver: 120 seconds\", \r\n    effectGold: \"Gold: 200 seconds\", \r\n  }\r\n\r\n]","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../../components/navbar/Navbar\"\r\nimport LevelProgressBar from './LevelProgressBar';\r\nimport {Reveal} from \"../../components/powers/Reveal\"\r\nimport \"./potionsView.css\"\r\nimport \"./responsive/responsive.css\"\r\nimport \"./responsive/tablet.css\"\r\nimport { motion } from \"framer-motion\";\r\nimport Icer from \"../../components/powers/Icer\"\r\nimport MassFreeze from \"../../components/powers/MassFreeze.js\"\r\n// Redux\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { activate_power } from \"../../redux/PowerReducer\"\r\nimport { reduce_potion } from '../../redux/PotionReducer';\r\nimport { golden_ingredient } from \"../../redux/PotionRecipeReducer\"\r\n// Images & Sounds\r\nimport card_back from \"../../image_assets/general/card_back1.webp\"\r\nimport PotionSelectPlayers from './PotionSelectPlayers';\r\nimport ReceiveGiveGift from '../../components/powers/GiveGift';\r\nimport PotionInfo, {DisplayInfo} from './PotionInfo';\r\nimport {playSound} from \"../../components/playSound/playSound\"\r\n\r\n\r\n\r\nfunction PotionsView(props_socket) {\r\n\r\n  var props = {\r\n    focus: \"potions\",\r\n  }\r\n\r\n  const [recipe, setRecipe] = useState({id: 0, ingred1: 0, ingred2: 0, ingred3: 0, ingred4: 0, flask: 0, amount1: 0, amount2: 0, amount3: 0, amount4: 0})\r\n  const [playerLevel, setPlayerLevel] = useState(1)\r\n  const [selectPlayer, setSelectPlayer] = useState([\"hidden\", \"hidden\", \"hidden\"])\r\n\r\n  let navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const potionsList = useSelector((state) => state.potions.value)\r\n  const recipeList = useSelector((state) => state.recipe.value)\r\n  const ingredientsList = useSelector((state) => state.ingredients.value)\r\n  const levelExp = useSelector((state) => state.levelExp.value)\r\n  const powersList = useSelector((state) => state.powers.value)\r\n\r\n\r\n  useEffect(() => {\r\n    setPlayerLevel(levelExp.currentLevel)\r\n  }, [levelExp.currentLevel])\r\n\r\n\r\n  // Clicking on cards\r\n  const potionInteraction = (id) => {\r\n\r\n    // If potion has no amount\r\n    if (potionsList[id].amount > 0) {\r\n      document.getElementById(\"potionView_actions\").style.display = \"inherit\"\r\n    } else {\r\n      document.getElementById(\"potionView_actions\").style.display = \"none\"\r\n    }\r\n    \r\n    // Show or not, if the level is high enough\r\n    if (playerLevel === 4 && id > 15) {playSound(\"nope\")}\r\n    else if (playerLevel === 3 && id > 11) {playSound(\"nope\")}\r\n    else if (playerLevel === 2 && id > 7) {playSound(\"nope\")}\r\n    else if (playerLevel === 1 && id > 3) {playSound(\"nope\")}\r\n    else {\r\n      // Display the recipe at the bottom of the page\r\n      setRecipe({\r\n        id: id, \r\n        ingred1: recipeList[id].ing1_id, \r\n        ingred2: recipeList[id].ing2_id, \r\n        ingred3: recipeList[id].ing3_id, ingred4: \r\n        recipeList[id].ing4_id, \r\n        flask: recipeList[id].potion_image, \r\n        amount1: recipeList[id].ing1_amount, \r\n        amount2: recipeList[id].ing2_amount, amount3: \r\n        recipeList[id].ing3_amount, \r\n        amount4: recipeList[id].ing4_amount})\r\n      \r\n        playSound(\"blop\")\r\n        console.log(recipe)\r\n    }\r\n  }\r\n\r\n  \r\n  // Clicking on \"USE\"\r\n  const activatePotion = () => {\r\n    switch (recipe.id) {\r\n      case 0: setSelectPlayer([\"blessing\", \"GIFT EXP\"]); break;\r\n      case 1: dispatch(activate_power({power_name: \"DOUBLE POINTS\"})); playSound(\"blessing\"); break;\r\n      case 2: dispatch(activate_power({power_name: \"SPEED UP\"})); playSound(\"blessing\"); break;\r\n      case 3: dispatch(activate_power({power_name: \"PROTECTION\"})); playSound(\"blessing\"); break;\r\n      case 4: setSelectPlayer([\"curse\", \"FREEZE\"]); break;\r\n      case 5: dispatch(activate_power({power_name: \"FIFTY FIFTY\"})); break;\r\n      case 6: setSelectPlayer([\"curse\", \"POINT POISON\"]); playSound(\"curse\"); break;\r\n      case 7: setSelectPlayer([\"blessing\", \"GIVE GIFT\"]); break;\r\n      case 8: dispatch(activate_power({power_name: \"TRANSMUTATION\"})); break;\r\n      case 9: dispatch(activate_power({power_name: \"TRIPPLE POINTS\"})); playSound(\"blessing\"); break;\r\n      case 10: dispatch(activate_power({power_name: \"JUKEBOX\"})); playSound(\"blessing\"); break;\r\n      case 11: dispatch(activate_power({power_name: \"PRICE RUNNER\"})); playSound(\"blessing\"); break;\r\n      case 13: playSound(\"blessing\"); \r\n                const revealIngrd = Reveal(recipeList, potionsList); \r\n                dispatch(golden_ingredient({id: revealIngrd[0].id, ingredientNr: revealIngrd[0].golden}))\r\n                dispatch(golden_ingredient({id: revealIngrd[1].id, ingredientNr: revealIngrd[1].golden}))\r\n                dispatch(golden_ingredient({id: revealIngrd[2].id, ingredientNr: revealIngrd[2].golden}))\r\n      break;\r\n      case 14: setSelectPlayer([\"curse\", \"BLOCKER\"]); break;\r\n      case 15: dispatch(activate_power({power_name: \"DOUBLE BATCH\"})); playSound(\"blessing\"); break;\r\n      case 16: dispatch(activate_power({power_name: \"EPIC CHALLENGE\"})); playSound(\"blessing\"); break;\r\n      case 17: dispatch(activate_power({power_name: \"STREAK BONUS\"})); playSound(\"blessing\"); break;\r\n      case 18: setSelectPlayer([\"curse\", \"MASS FREEZE\"]); break;\r\n      case 19: dispatch(activate_power({power_name: \"GOLDEN POINTS\"})); playSound(\"blessing\"); break;\r\n\r\n      default:\r\n        break;\r\n\r\n    }\r\n\r\n    // Removes one potion from user\r\n    dispatch(reduce_potion({id: recipe.id}))\r\n\r\n    // If potion used is on self, then navigate to \"QuizView\"\r\n    if (recipe.id === 1 || recipe.id === 2 || recipe.id === 3 || recipe.id === 9 || recipe.id === 10 || recipe.id === 11 || recipe.id === 15 || recipe.id === 16 || recipe.id === 18 || recipe.id === 19) {navigate('/quiz')}\r\n\r\n  } // End of activatePotion()\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // Show potion ingredient are hidden if potion card not selected\r\n    window.setTimeout(function(){\r\n      if (recipe.ingred1 === 0) {document.getElementById(\"potionView_footer_display\").style.display = \"none\"} else {document.getElementById(\"potionView_footer_display\").style.display = \"flex\"}  \r\n    }, 500);\r\n  }, [recipe])\r\n  \r\n\r\n  const hideSelectPlayers = () => {\r\n    setSelectPlayer([\"hidden\", \"hidden\", \"hidden\"])\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className='potionsView'>\r\n\r\n        <PotionInfo potionID={recipe.id} />\r\n\r\n        {powersList[4].freeze === \"active\" && powersList[3].protection !== \"active\" && <Icer />}\r\n        {powersList[18].mass_freeze === \"active\" && powersList[3].protection !== \"active\" && <MassFreeze />}\r\n        {powersList[7].gift === \"active\" && <ReceiveGiveGift />}\r\n\r\n        {selectPlayer[0] === \"blessing\" && <PotionSelectPlayers socket={props_socket} selectPlayer={selectPlayer} hideSelectPlayers={hideSelectPlayers} />}\r\n        {selectPlayer[0] === \"curse\" && <PotionSelectPlayers socket={props_socket} selectPlayer={selectPlayer}  hideSelectPlayers={hideSelectPlayers} />}\r\n        \r\n        <Navbar focus={props}/>\r\n        \r\n        <div className=\"potionView_middle\">\r\n            <div className=\"potionView_middle_container\">\r\n              \r\n              <LevelProgressBar />\r\n\r\n              <div className=\"potionView_middle_cards\">\r\n\r\n      \r\n                {potionsList.map((potion, i) => {\r\n                    if (potion.amount > 0) {\r\n                        if (potion.level === 1) {\r\n                          return (\r\n                            <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} className=\"cardBox\">\r\n                              <img onClick={() => potionInteraction(i)} src={potion.image_bronze} alt=\"\" className=\"cards cards_clickable\" /> \r\n                              <p className=\"cards_amount_text\">{potion.amount}</p>\r\n                            </motion.div>\r\n                          )\r\n                        }\r\n                        if (potion.level === 2) {\r\n                          return (\r\n                            <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} className=\"cardBox\">\r\n                              <img onClick={() => potionInteraction(i)} src={potion.image_silver} alt=\"\" className=\"cards cards_clickable\" /> \r\n                              <p className=\"cards_amount_text\">{potion.amount}</p>\r\n                            </motion.div>\r\n                          )\r\n                        }\r\n                        if (potion.level === 3) {\r\n                          return (\r\n                            <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} className=\"cardBox\">\r\n                              <img onClick={() => potionInteraction(i)} src={potion.image_gold} alt=\"\" className=\"cards cards_clickable\" /> \r\n                              <p className=\"cards_amount_text\">{potion.amount}</p>\r\n                            </motion.div>\r\n                          )\r\n                        }\r\n\r\n\r\n                      \r\n                    } else if (potion.discovered === true) {\r\n                      if (potion.level === 1) {\r\n                        return (\r\n                          <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} className=\"cardBox\">\r\n                            <img onClick={() => potionInteraction(i)} src={potion.image_bronze} alt=\"\" className=\"cards cards_no_amount cards_clickable\" /> \r\n                            <p className=\"cards_amount_text\">{potion.amount}</p>\r\n                          </motion.div>\r\n                        )\r\n                      }\r\n                      if (potion.level === 2) {\r\n                        return (\r\n                          <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} className=\"cardBox\">\r\n                            <img onClick={() => potionInteraction(i)} src={potion.image_silver} alt=\"\" className=\"cards cards_no_amount cards_clickable\" /> \r\n                            <p className=\"cards_amount_text\">{potion.amount}</p>\r\n                          </motion.div>\r\n                        )\r\n                      }\r\n                      if (potion.level === 3) {\r\n                        return (\r\n                          <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} className=\"cardBox\">\r\n                            <img onClick={() => potionInteraction(i)} src={potion.image_gold} alt=\"\" className=\"cards cards_no_amount cards_clickable\" /> \r\n                            <p className=\"cards_amount_text\">{potion.amount}</p>\r\n                          </motion.div>\r\n                        )\r\n                      }\r\n\r\n\r\n                   \r\n                      } else {   \r\n                        if (playerLevel === 1 && i < 4) {\r\n                            return (\r\n                              <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} className=\"cardBox\">\r\n                              <img onClick={() => potionInteraction(i)} src={card_back} alt=\"\" className=\"cards cards_clickable\" /> \r\n                              </motion.div>\r\n                            )\r\n                          } else if (playerLevel === 2 && i < 8) { \r\n                            return (\r\n                              <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} className=\"cardBox\">\r\n                              <img onClick={() => potionInteraction(i)} src={card_back} alt=\"\" className=\"cards cards_clickable\" /> \r\n                              </motion.div>\r\n                            )\r\n                          } else if (playerLevel === 3 && i < 12) { \r\n                            return (\r\n                              <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} className=\"cardBox\">\r\n                              <img onClick={() => potionInteraction(i)} src={card_back} alt=\"\" className=\"cards cards_clickable\" /> \r\n                              </motion.div>\r\n                            )\r\n                          } else if (playerLevel === 4 && i < 16) { \r\n                            return (\r\n                              <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} className=\"cardBox\">\r\n                              <img onClick={() => potionInteraction(i)} src={card_back} alt=\"\" className=\"cards cards_clickable\" /> \r\n                              </motion.div>\r\n                            )\r\n                          } else if (playerLevel === 5 && i < 21) { \r\n                            return (\r\n                              <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }} transition={{ type: \"spring\", stiffness: 200, damping: 40 }} key={i} className=\"cardBox\">\r\n                              <img onClick={() => potionInteraction(i)} src={card_back} alt=\"\" className=\"cards cards_clickable\" /> \r\n                              </motion.div>\r\n                            )\r\n                          } else {\r\n                            return (\r\n                              <div key={i} className=\"cardBox\">\r\n                              <img onClick={() => potionInteraction(i)} src={card_back} alt=\"\" className=\"cards cards_not_discovered cards_clickable\" /> \r\n                              </div>\r\n                            )\r\n\r\n                        }\r\n                        \r\n                      }\r\n                      \r\n                    })\r\n                }\r\n                \r\n               \r\n                <div className=\"extra_space\"></div>\r\n              </div>      \r\n            </div>\r\n        </div>\r\n        \r\n        <div className=\"potionView_footer\">\r\n       \r\n          <div className=\"potionView_footer_container\" id=\"potionView_footer_display\">\r\n            {recipeList[recipe.id].ing1_golden ? (<div className='bottom_recipe_container'><img src={ingredientsList[recipe.ingred1].image_golden} alt=\"\" className=\"card_ingredient\" /><p className=\"footer_ingred_amount\">{recipe.amount1}</p></div>) : (<><img src={ingredientsList[recipe.ingred1].image_normal} alt=\"\" className=\"card_ingredient\" /></>)}\r\n            {recipeList[recipe.id].ing2_golden ? (<div className='bottom_recipe_container'><img src={ingredientsList[recipe.ingred2].image_golden} alt=\"\" className=\"card_ingredient\" /><p className=\"footer_ingred_amount\">{recipe.amount2}</p></div>) : (<><img src={ingredientsList[recipe.ingred2].image_normal} alt=\"\" className=\"card_ingredient\" /></>)}\r\n            <img src={recipe.flask} alt=\"\" className=\"chosen_bottle\" />\r\n            {recipeList[recipe.id].ing3_golden ? (<div className='bottom_recipe_container'><img src={ingredientsList[recipe.ingred3].image_golden} alt=\"\" className=\"card_ingredient\" /><p className=\"footer_ingred_amount\">{recipe.amount3}</p></div>) : (<><img src={ingredientsList[recipe.ingred3].image_normal} alt=\"\" className=\"card_ingredient\" /></>)}\r\n            {recipeList[recipe.id].ing4_golden ? (<div className='bottom_recipe_container'><img src={ingredientsList[recipe.ingred4].image_golden} alt=\"\" className=\"card_ingredient\" /><p className=\"footer_ingred_amount\">{recipe.amount4}</p></div>) : (<><img src={ingredientsList[recipe.ingred4].image_normal} alt=\"\" className=\"card_ingredient\" /></>)}          \r\n          </div> \r\n          \r\n          <div id=\"potionView_actions\" className=\"potionView_footer_actions\">\r\n                  <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.9 }} transition={{ type: \"spring\", stiffness: 400, damping: 17 }} onClick={() => activatePotion()} className=\"potion_action_btns\"><p>USE</p></motion.div>\r\n                  <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.9 }} transition={{ type: \"spring\", stiffness: 400, damping: 17 }} onClick={() => DisplayInfo()} className=\"potion_action_btns\"><p>INFO</p></motion.div>\r\n                  <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.9 }} transition={{ type: \"spring\", stiffness: 400, damping: 17 }} className=\"potion_action_btns\"><p>SELL</p></motion.div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PotionsView\r\n\r\n\r\n","\r\n\r\nexport const Reveal = (recipeList, potionList) => {\r\n    let revealIngredients = []\r\n    let possible_reveal_collection = []\r\n  \r\n    // Loop through and list all ingredients with undiscovered amounts\r\n    for (let i = 0; i < 20; i++) {\r\n        if (recipeList[i].ing1_golden === false) {possible_reveal_collection.push({id: i, golden: \"ing1\"})}\r\n        if (recipeList[i].ing2_golden === false) {possible_reveal_collection.push({id: i, golden: \"ing2\"})}\r\n        if (recipeList[i].ing3_golden === false) {possible_reveal_collection.push({id: i, golden: \"ing3\"})}\r\n        if (recipeList[i].ing4_golden === false) {possible_reveal_collection.push({id: i, golden: \"ing4\"})}\r\n    }\r\n\r\n    // Add first undiscovered amount to array\r\n    revealIngredients.push(possible_reveal_collection[0])\r\n    \r\n    // Remove the one that was already added\r\n    possible_reveal_collection.shift()\r\n\r\n    // Shuffle the remaining \r\n    possible_reveal_collection.sort(() => Math.random() - 0.5)\r\n    \r\n    // if Reveal potion is level 2, then add one more amount reveal\r\n    if (potionList[13].level === 2) {revealIngredients.push(possible_reveal_collection[0])}\r\n\r\n    // if Reveal potion is level 3, then add two more amount reveal\r\n    else if (potionList[13].level === 3) {revealIngredients.push(possible_reveal_collection[0]); revealIngredients.push(possible_reveal_collection[1])}\r\n\r\n    // if Reveal is level one add values that will do nothing (need to fill up)\r\n    else {revealIngredients.push({id: 0, golden: \"none\"}); revealIngredients.push({id: 0, golden: \"none\"}) }\r\n\r\n    console.log(\"possible_reveal_collection\", possible_reveal_collection)\r\n    console.log(\"revealIngredients\", revealIngredients)\r\n    \r\n   return revealIngredients\r\n}\r\n\r\n "],"names":["useState","giftArray","setGiftArray","dispatch","useDispatch","powersList","useSelector","state","powers","value","ingredientsList","ingredients","useEffect","gift","amount","colletArray","attackLevel7","gift_amount_1","gift_amount_2","gift_amount_3","ingred","Array","keys","sort","Math","random","i","push","giveGift_ingredients","document","getElementById","style","display","startGift","className","id","onClick","dectivate_power","power_name","src","exitBtn","alt","map","herb","image_normal","App","icer_duration_level","duration","attackLevel4","duration_level_1","duration_level_2","duration_level_3","playSound","setTimeout","icer","animate","opacity","transition","ease","times","MassFreeze","attackLevel18","coinbag","coins","levelExp","exp","currentLevel","totalExp","level_2_requirement","level_3_requirement","level_4_requirement","level_5_requirement","width","total","pointerEvents","title","motion","whileHover","scale","whileTap","type","stiffness","damping","reduce_coins_amount","add_exp_amount","props","socket","emitData","setEmitData","maxPlayerTargets","setMaxPlayerTargets","sound","setSound","gameStats","GameData","playerStats","potionsList","potions","selectChosenPlayers","playerName","potionName","selectPlayer","effect","level","powerEffect","clickedToSelect","length","filter","item","playerLimit","playerLimitByPotion","player","emit","hideSelectPlayers","potionID","potion","potionInfoData","name","description","flaskImage","effectTitle","effectBronze","effectSilver","effectGold","flasks","props_socket","ingred1","ingred2","ingred3","ingred4","flask","amount1","amount2","amount3","amount4","recipe","setRecipe","playerLevel","setPlayerLevel","setSelectPlayer","navigate","useNavigate","recipeList","potionInteraction","ing1_id","ing2_id","ing3_id","ing4_id","potion_image","ing1_amount","ing2_amount","ing3_amount","ing4_amount","console","log","activatePotion","activate_power","revealIngrd","potionList","revealIngredients","possible_reveal_collection","ing1_golden","golden","ing2_golden","ing3_golden","ing4_golden","shift","Reveal","golden_ingredient","ingredientNr","reduce_potion","window","freeze","protection","Icer","mass_freeze","Navbar","focus","image_bronze","image_silver","image_gold","discovered","card_back","image_golden"],"sourceRoot":""}