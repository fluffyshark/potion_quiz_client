{"version":3,"file":"static/js/324.942d4f06.chunk.js","mappings":"sYAuHA,MAtGA,WAEI,OAAsCA,EAAAA,EAAAA,UAAS,CAC3CC,cAASC,EACTC,cAASD,IAFb,eAAOE,EAAP,KAAoBC,EAApB,KAKA,GAAsCL,EAAAA,EAAAA,UAAS,IAA/C,eAAOM,EAAP,KAAoBC,EAApB,KACA,GAA8BP,EAAAA,EAAAA,UAAS,IAAvC,eAAOQ,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAGXC,EAAe,SAACC,GAElBV,GAAe,SAAAW,GAAI,yBAASA,GAAT,cAAgBD,EAAEE,OAAOC,GAAIH,EAAEE,OAAOE,OAAtC,GACtB,EAIKC,EAAW,yCAAG,WAAML,GAAN,qFAChBA,EAAEM,iBADc,kBAGUC,EAAAA,GAAAA,KAAW,0CAA2ClB,GAHhE,cAGNmB,EAHM,OAIZhB,EAAegB,EAAQC,KAAKC,QAC5BC,QAAQC,IAAIJ,EAAQC,MALR,SAOUF,EAAAA,GAAAA,IAAU,qCAPpB,OAONM,EAPM,OAQZnB,EAAWmB,EAAQJ,MACnBE,QAAQC,IAAIC,EAAQJ,MATR,kDAYZE,QAAQC,IAAI,cAAZ,MAZY,0DAAH,sDAoDnB,OAlCEE,EAAAA,EAAAA,YAAU,YAOV,WAGI,GAAIrB,EAAQsB,OAAS,EAAG,CAEpB,IAAIC,EAAiB,GACjBC,EAAgB,GAGpB1B,EAAY2B,KAAI,SAACC,GACbH,EAAeI,KAAK3B,EAAQ4B,QAAO,SAAAC,GAAK,OAAIA,EAAMC,MAAQJ,CAAlB,IAC3C,IAGD,IAAK,IAAIK,EAAI,EAAGA,EAAIR,EAAeD,OAAQS,IACvCP,EAAcO,GAAKR,EAAeQ,GAAG,GAGzC3B,GAAS4B,EAAAA,EAAAA,IAAgBR,IAEzBtB,EAAS,cACZ,CACJ,CA5BG+B,EACH,GAAE,CAACjC,KAiCJ,gBAAKkC,UAAU,YAAf,UACQ,iBAAKA,UAAU,sBAAf,WAEI,gBAAKA,UAAU,kBAAf,UAAiC,4CAEjC,gBAAKA,UAAU,gBAAf,UACI,iBAAKA,UAAU,oBAAf,WACI,gBAAKA,UAAU,8BAAf,UAA6C,gBAAKC,IAAKC,EAAeC,IAAI,QAC1E,kBAAO3B,GAAG,WAAW4B,KAAK,OAAOC,YAAY,WAAWC,SAAUlC,UAI1E,gBAAK4B,UAAU,gBAAf,UACI,iBAAKA,UAAU,oBAAf,WACI,gBAAKA,UAAU,8BAAf,UAA6C,gBAAKC,IAAKM,EAAcJ,IAAI,QACzE,kBAAO3B,GAAG,WAAW4B,KAAK,WAAWC,YAAY,cAAcC,SAAUlC,UAIjF,gBAAK4B,UAAU,sBAAf,UACI,gBAAKA,UAAU,qBAAqBQ,QAAS9B,EAA7C,UAA0D,yCAM7E,C","sources":["pages/loginView/LoginView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from \"axios\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport \"./loginView.css\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { add_all_quizzes } from \"../../redux/QuizReducer\"\r\nimport loginUserIcon from \"../../image_assets/general/loginusericon.webp\"\r\nimport passwordIcon from \"../../image_assets/general/passwordicon.webp\"\r\n\r\n\r\n\r\n// NEXT - CONVERT AND ADD IMAGES TO QuizSelectVivew\r\n// NEXT - GET QUIZ FROM DATABASE\r\n// NEXT - CREAT REDUSER FOR QUIZ\r\n// NEXT - STORE USER CREDENTALS IN App.js STATE\r\n\r\n\r\nfunction LoginView() {\r\n\r\n    const [credentials, setCredentials] = useState({\r\n        username:undefined,\r\n        password:undefined\r\n    })\r\n\r\n    const [userQuizIDs, setUserQuizIDs] = useState([])\r\n    const [allQuiz, setAllQuiz] = useState([])\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const handleChange = (e) => {\r\n        // Send credentials to use for fetching user from database\r\n        setCredentials(prev => ({...prev, [e.target.id]:e.target.value}))\r\n    }\r\n\r\n\r\n\r\n    const handleClick = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            const userRes = await axios.post(\"http://localhost:8800/server/auth/login\", credentials)\r\n            setUserQuizIDs(userRes.data.quizID);\r\n            console.log(userRes.data)\r\n\r\n            const quizRes = await axios.get(\"http://localhost:8800/server/quiz\")\r\n            setAllQuiz(quizRes.data);\r\n            console.log(quizRes.data)\r\n\r\n          } catch (err) {\r\n            console.log(\"Login error\", err)\r\n          }\r\n    }\r\n\r\n\r\n    // When there is a change in allQuiz (quizzes has been fetched from database) then run function to filter only quizzez from logged in user\r\n    useEffect(() => {\r\n        filterUsersQuiz()\r\n    }, [allQuiz])\r\n\r\n    \r\n    \r\n    // Filter user quizzes from all quizzes and send to redux\r\n    function filterUsersQuiz() {\r\n\r\n        // Only run if data is fetched (not empty)\r\n        if (allQuiz.length > 0) {\r\n            \r\n            let userQuizNested = []\r\n            let userOwnedQuiz = []\r\n            \r\n            // Sort the quizes that the user created into an array (create a nested array)\r\n            userQuizIDs.map((userQuizID) => {\r\n                userQuizNested.push(allQuiz.filter(quiz1 => quiz1._id === userQuizID))\r\n            })\r\n        \r\n            // Remove the array nesting\r\n            for (let i = 0; i < userQuizNested.length; i++) {\r\n                userOwnedQuiz[i] = userQuizNested[i][0]\r\n            }\r\n            // Send all users quiz to redux\r\n            dispatch(add_all_quizzes(userOwnedQuiz))\r\n            \r\n            navigate(\"/quizselect\")\r\n        }\r\n    } // End of filterUsersQuiz()\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className='loginView'>\r\n            <div className=\"loginView_container\">\r\n                \r\n                <div className=\"loginView_title\"><p>Teacher Login</p></div>\r\n                \r\n                <div className=\"loginView_box\">\r\n                    <div className=\"loginView_box_box\">\r\n                        <div className=\"loginView_box_IconContainer\"><img src={loginUserIcon} alt=\"\" /></div>\r\n                        <input id=\"username\" type=\"text\" placeholder='Email...' onChange={handleChange} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"loginView_box\">\r\n                    <div className=\"loginView_box_box\">\r\n                        <div className=\"loginView_box_IconContainer\"><img src={passwordIcon} alt=\"\" /></div>\r\n                        <input id=\"password\" type=\"password\" placeholder='Password...' onChange={handleChange}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"loginView_login_box\">\r\n                    <div className=\"loginView_loginBtn\" onClick={handleClick}><p>Login</p></div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default LoginView"],"names":["useState","username","undefined","password","credentials","setCredentials","userQuizIDs","setUserQuizIDs","allQuiz","setAllQuiz","navigate","useNavigate","dispatch","useDispatch","handleChange","e","prev","target","id","value","handleClick","preventDefault","axios","userRes","data","quizID","console","log","quizRes","useEffect","length","userQuizNested","userOwnedQuiz","map","userQuizID","push","filter","quiz1","_id","i","add_all_quizzes","filterUsersQuiz","className","src","loginUserIcon","alt","type","placeholder","onChange","passwordIcon","onClick"],"sourceRoot":""}