{"version":3,"file":"static/js/314.179b7a88.chunk.js","mappings":"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","sources":["components/powers/GiveGift.js","components/powers/Icer.js","components/powers/MassFreeze.js","pages/leaderboard/Leaderboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport exitBtn from \"../../image_assets/general/exit_btn.png\"\r\nimport \"./powers.css\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { dectivate_power } from \"../../redux/PowerReducer\"\r\nimport { giveGift_ingredients } from \"../../redux/IngredientReducer\"\r\n\r\n\r\nfunction ReceiveGiveGift() {\r\n\r\n  const [giftArray, setGiftArray] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n  const powersList = useSelector((state) => state.powers.value)\r\n  const ingredientsList = useSelector((state) => state.ingredients.value)\r\n\r\n\r\n  function startGift() {\r\n    let amount = 0\r\n    let colletArray = []\r\n\r\n    if (powersList[7].attackLevel7 === 1) {amount = powersList[7].gift_amount_1}\r\n    if (powersList[7].attackLevel7 === 2) {amount = powersList[7].gift_amount_2}\r\n    if (powersList[7].attackLevel7 === 3) {amount = powersList[7].gift_amount_3}\r\n\r\n    /// Creating, filling, shuffling an array with the id of all ingredients  \r\n    var ingred = [...Array(180).keys()].sort(() => Math.random() - 0.5);\r\n    \r\n    /// Assigning as many ingredient's id, as the gifted amount level allows \r\n    for (let i = 0; i < amount; i++) {colletArray.push(ingred[i])}\r\n\r\n    /// Assign ingredients' id to giftArray, that will be mapped out\r\n    setGiftArray(colletArray)\r\n\r\n    /// Add the ingredients to user's collection via ingredientReducer\r\n    dispatch(giveGift_ingredients({colletArray}))\r\n\r\n    /// Show Give Gift popup layout\r\n    document.getElementById(\"give_gift\").style.display = \"flex\"\r\n\r\n  } // End of startGift()\r\n\r\n  \r\n  useEffect(() => {if (powersList[7].gift === \"active\") {startGift()}}, [powersList[7].gift])\r\n\r\n  function exitGiftView() {\r\n    document.getElementById(\"give_gift\").style.display = \"none\"\r\n    dispatch(dectivate_power({power_name: \"GIVE GIFT\"}))\r\n  }\r\n\r\n  return (\r\n    <div className=\"give_gift_container\" id=\"give_gift\">\r\n      <div className=\"give_gift_scroll\">\r\n        <div className=\"give_gift_scroll_top\"><img onClick={() => {exitGiftView()}} src={exitBtn} alt=\"\" /></div>\r\n        <div className=\"give_gift_scroll_text\">\r\n            <p className=\"give_gift_scroll_text_title\">YOU GOT A GIFT</p>\r\n            <p className=\"give_gift_scroll_text_sender\">Sent by a true friend</p>\r\n        </div>\r\n        <div className=\"give_gift_scroll_wrap\">\r\n          {\r\n            giftArray.map((herb, i) => {\r\n              return <img key={i} className='give_gift_scroll_wrap_herbs' src={ingredientsList[giftArray[i]].image_normal} alt=\"\" />\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReceiveGiveGift\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import \"./powers.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { dectivate_power } from \"../../redux/PowerReducer.js\"\r\nimport icer from \"../../image_assets/powers/icer.webp\"\r\nimport { motion } from \"framer-motion\";\r\nimport { playSound } from \"../playSound/playSound\";\r\n\r\n\r\nexport default function App() {\r\n\r\n  const dispatch = useDispatch()\r\n  const powersList = useSelector((state) => state.powers.value)\r\n\r\n  // Dictate the duration of freeze power depending on potion level.\r\n  // This should be rewritten and sent to other players via Socket IO\r\n  const icer_duration_level = () => {\r\n    let duration = 0\r\n\r\n    if (powersList[4].attackLevel4 === 1) {duration = powersList[4].duration_level_1}\r\n    if (powersList[4].attackLevel4 === 2) {duration = powersList[4].duration_level_2}\r\n    if (powersList[4].attackLevel4 === 3) {duration = powersList[4].duration_level_3}\r\n\r\n    playSound(\"freeze\")\r\n\r\n    return duration\r\n  }\r\n\r\n\r\n  setTimeout(function() {\r\n    dispatch(dectivate_power({power_name: \"FREEZE\"}))\r\n    document.getElementById(\"icer\").style.display = \"none\"\r\n  }, icer_duration_level()*1000);\r\n\r\n\r\n  return (\r\n    <motion.img\r\n      src={icer}\r\n      className=\"power_icer\"\r\n      id=\"icer\"\r\n      animate={{\r\n        opacity: [0, 0.8, 0.8, 0],\r\n      }}\r\n      transition={{\r\n        duration: icer_duration_level(),\r\n        ease: \"easeInOut\",\r\n        times: [0, 0.2, 0.9, 1],\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import \"./powers.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { dectivate_power } from \"../../redux/PowerReducer.js\"\r\nimport icer from \"../../image_assets/powers/icer.webp\"\r\nimport { motion } from \"framer-motion\";\r\nimport { playSound } from \"../playSound/playSound\";\r\n\r\n\r\nexport default function MassFreeze() {\r\n\r\n  const dispatch = useDispatch()\r\n  const powersList = useSelector((state) => state.powers.value)\r\n\r\n  // Dictate the duration of freeze power depending on potion level.\r\n  // This should be rewritten and sent to other players via Socket IO\r\n  const icer_duration_level = () => {\r\n    let duration = 0\r\n\r\n    if (powersList[18].attackLevel18 === 1) {duration = powersList[18].duration_level_1}\r\n    if (powersList[18].attackLevel18 === 2) {duration = powersList[18].duration_level_2}\r\n    if (powersList[18].attackLevel18 === 3) {duration = powersList[18].duration_level_3}\r\n\r\n    playSound(\"freeze\")\r\n\r\n    return duration\r\n  }\r\n\r\n\r\n  setTimeout(function() {\r\n    dispatch(dectivate_power({power_name: \"MASS FREEZE\"}))\r\n    document.getElementById(\"freeze\").style.display = \"none\"\r\n  }, icer_duration_level()*1000);\r\n\r\n\r\n  return (\r\n    <motion.img\r\n      src={icer}\r\n      className=\"power_mass_freeze\"\r\n      id=\"freeze\"\r\n      animate={{\r\n        opacity: [0, 0.8, 0.8, 0],\r\n      }}\r\n      transition={{\r\n        duration: icer_duration_level(),\r\n        ease: \"easeInOut\",\r\n        times: [0, 0.2, 0.9, 1],\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"./leaderboard.css\"\r\nimport \"./responsive/responsive.css\"\r\nimport \"./responsive/leaderboardTablet.css\"\r\nimport Navbar from '../../components/navbar/Navbar'\r\nimport leaderboard from \"../../image_assets/general/leaderboard.webp\"\r\nimport Icer from \"../../components/powers/Icer\"\r\nimport MassFreeze from \"../../components/powers/MassFreeze.js\"\r\nimport { useSelector } from \"react-redux\"\r\nimport bronze_card_display from \"../../image_assets/general/bronze_card_display.png\"\r\nimport silver_card_display from \"../../image_assets/general/silver_card_display.png\"\r\nimport gold_card_display from \"../../image_assets/general/gold_card_display.png\"\r\nimport money_icon from \"../../image_assets/general/money_icon.webp\"\r\nimport ReceiveGiveGift from '../../components/powers/GiveGift'\r\n\r\n\r\nfunction Leaderboard() {\r\n\r\n  var props = {\r\n    focus: \"leaderboard\",\r\n  }\r\n\r\n  const [rankedPlayers, setRankedPlayers] = useState([\r\n    {name: \"NO PLAYER\", coins: 0, cards: [0,0,0], points: 0},\r\n    {name: \"NO PLAYER\", coins: 0, cards: [0,0,0], points: 0},\r\n    {name: \"NO PLAYER\", coins: 0, cards: [0,0,0], points: 0},\r\n    {name: \"NO PLAYER\", coins: 0, cards: [0,0,0], points: 0},\r\n    {name: \"NO PLAYER\", coins: 0, cards: [0,0,0], points: 0},\r\n    {name: \"NO PLAYER\", coins: 0, cards: [0,0,0], points: 0}\r\n  ])\r\n\r\n  const gameStats = useSelector((state) => state.GameData.value)\r\n  const powersList = useSelector((state) => state.powers.value)\r\n\r\n  let rankPlacement = [\r\n    \"scoreboard_containter_rank01\", \"scoreboard_containter_rank02\", \"scoreboard_containter_rank03\",\r\n    \"scoreboard_containter_rank04\", \"scoreboard_containter_rank05\", \"scoreboard_containter_rank06\"\r\n  ]\r\n\r\n\r\n  const calculateRank = () => {\r\n    let playersPointsAndNames = rankedPlayers\r\n\r\n    // Before any player crafted a card, gameStats is not an Array. But will become when gameStats is sent from server, at first potion crafted.\r\n    if (gameStats.hasOwnProperty('data')) {\r\n       // Award points for each card players have (bronze = 20) (silver = 50) (gold = 150)\r\n      gameStats.data.map((player) => {\r\n        let points = (player.cards[0] * 20) + (player.cards[1] * 50) + (player.cards[2] * 150)\r\n        playersPointsAndNames.push({name: player.playerName, coins: player.coins, cards: player.cards, points: points})\r\n      })\r\n    } else {\r\n      // Award points for each card players have (bronze = 20) (silver = 50) (gold = 150)\r\n      gameStats.map((player) => {\r\n        let points = (player.cards[0] * 20) + (player.cards[1] * 50) + (player.cards[2] * 150)\r\n        playersPointsAndNames.push({name: player.playerName, coins: player.coins, cards: player.cards, points: points})\r\n      })\r\n    } \r\n\r\n   \r\n    // Rank the array of players based of the amount of points\r\n    playersPointsAndNames.sort((a, b) => b.points - a.points);\r\n  //  console.log(\"playersPointsAndNames: \", playersPointsAndNames)\r\n\r\n    // Remove all players except to top 6\r\n    for (let i = 0; i < playersPointsAndNames.length; i++) {\r\n      if (playersPointsAndNames.length > 6) {playersPointsAndNames.pop()}\r\n    }\r\n    // Set ranked array as state\r\n    setRankedPlayers(playersPointsAndNames) \r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n  //  console.log(\"Leaderboard gameStats: \", gameStats)\r\n    setTimeout(function() {\r\n      calculateRank()\r\n    }, 1000);\r\n  }, [gameStats])\r\n\r\n  \r\n  return (\r\n    <div className='scoreboardView'>\r\n\r\n      {powersList[4].freeze === \"active\" && powersList[3].protection !== \"active\" && <Icer />}\r\n      {powersList[18].mass_freeze === \"active\" && powersList[3].protection !== \"active\" && <MassFreeze />}\r\n      {powersList[7].gift === \"active\" && <ReceiveGiveGift />}\r\n\r\n      <Navbar focus={props}/>\r\n        \r\n        <div className=\"leaderboard_middle\">\r\n          <div id=\"leaderboard_middle_container_id\" className=\"leaderboard_middle_container\">\r\n            <div className=\"scoreboard_image_container\">\r\n              <img id=\"leaderboardImage\" src={leaderboard} alt=\"\" />\r\n\r\n              {              \r\n              \r\n              rankedPlayers.map((player, i) => {\r\n                return (\r\n                  \r\n                  <div key={i} className=\"scoreboard_rank_container\" id={rankPlacement[i]} >\r\n                      <div className='scoreboard_rank_container_name'>\r\n                        <p>{player.name}</p>\r\n                      </div>\r\n                      \r\n                      <div className='scoreboard_rank_container_cards'>\r\n                        <p className='leaderboard_bronze_cards'>{player.cards[0]}x</p>\r\n                        <img src={bronze_card_display} alt=\"\" />\r\n                        <p className='leaderboard_silver_cards'>{player.cards[1]}x</p>\r\n                        <img src={silver_card_display} alt=\"\" />\r\n                        <p className='leaderboard_gold_cards'>{player.cards[2]}x</p>\r\n                        <img src={gold_card_display} alt=\"\" />\r\n                      </div>\r\n                      \r\n                      <div className='scoreboard_rank_container_coins'>\r\n                        <p>{player.coins}</p>\r\n                        <img src={money_icon} alt=\"\" />\r\n                      </div>\r\n                  </div>\r\n                \r\n                )\r\n        \r\n              })\r\n             \r\n             }\r\n                \r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"leaderboard_footer\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Leaderboard\r\n\r\n\r\n"],"names":["useState","giftArray","setGiftArray","dispatch","useDispatch","powersList","useSelector","state","powers","value","ingredientsList","ingredients","useEffect","gift","amount","colletArray","attackLevel7","gift_amount_1","gift_amount_2","gift_amount_3","ingred","Array","keys","sort","Math","random","i","push","giveGift_ingredients","document","getElementById","style","display","startGift","className","id","onClick","dectivate_power","power_name","src","exitBtn","alt","map","herb","image_normal","App","icer_duration_level","duration","attackLevel4","duration_level_1","duration_level_2","duration_level_3","playSound","setTimeout","icer","animate","opacity","transition","ease","times","MassFreeze","attackLevel18","name","coins","cards","points","rankedPlayers","setRankedPlayers","gameStats","GameData","rankPlacement","playersPointsAndNames","hasOwnProperty","data","player","playerName","a","b","length","pop","calculateRank","freeze","protection","Icer","mass_freeze","Navbar","focus","leaderboard","bronze_card_display","silver_card_display","gold_card_display","money_icon"],"sourceRoot":""}